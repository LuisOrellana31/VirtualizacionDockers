{"version":3,"sources":["./src/app/usuarios/usuarios.module.ts","./src/app/usuarios/listar/listar.component.ts","./src/app/usuarios/listar/listar.component.css","./src/app/usuarios/editar-usuarios/editar-usuarios.component.css","./src/app/validator/validaciones.service.ts","./src/app/usuarios/editar-usuarios/editar-usuarios.component.html","./src/app/usuarios/usuario/usuario.component.html","./src/app/usuarios/service/usuario.service.ts","./src/app/usuarios/usuario/usuario.component.css","./src/app/usuarios/usuario/usuario.component.ts","./src/app/usuarios/editar-usuarios/editar-usuarios.component.ts","./src/app/usuarios/listar/listar.component.html","./src/app/usuarios/usuario-routing.module.ts","./src/app/usuarios/filtrosUsuarios/filtro-usuarios.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AAGA;AAEgB;AACH;AAC0B;AAGV;AACZ;AACH;AACF;AACJ;IAkB1C,cAAc,SAAd,cAAc;CAAI;AAAlB,cAAc;IAd1B,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,2EAAgB,EAAC,wEAAe;YAC7C,kGAAuB,EAAC,wFAAkB,CAAC;QAC7C,OAAO,EAAE;YACT,4DAAY;YACZ,eAAe;YACf,4DAAY;YAEZ,wEAAc;YACd,qEAAa;YACb,wEAAe;YACf,4EAAoB;SACnB;KACF,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjC8C;AACvB;AAElD,2DAA2D;AACC;AACI;IAOnD,eAAe,SAAf,eAAe;IAO1B,YAAoB,IAAgB,EAC1B,WAA2B;QADjB,SAAI,GAAJ,IAAI,CAAY;QAC1B,gBAAW,GAAX,WAAW,CAAgB;QANrC,iBAAY,GAAc,EAAE,CAAC;QAEtB,WAAM,GAAW,EAAE,CAAC;IAIc,CAAC;IAE1C,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAGD,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,qEAAW,CAAC,EAAE,GAAG,sBAAsB,CAAC,CAAC,SAAS,CACzE,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CACF,CAAC;IACJ,CAAC;IAKD,oBAAoB;QAElB,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,OAAO;SACR;QACD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;IAC1C,CAAC;IAED,YAAY,CAAC,IAAa;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;IAC/B,CAAC;CAGF;;YApDQ,+DAAU;YAGV,uEAAc;;;wBAapB,uDAAS,SAAC,WAAW;;AALX,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,mFAAsC;;KAEvC,CAAC;qCAQ0B,+DAAU;QACb,uEAAc;GAR1B,eAAe,CAyC3B;AAzC2B;;;;;;;;;;;;;ACZ5B;AAAe,mKAAoG,uHAAuH,E;;;;;;;;;;;;ACA1O;AAAe,6GAA8C,mIAAmI,E;;;;;;;;;;;;;;;;;;;;;;;;ACArJ;IAO9B,mBAAmB,SAAnB,mBAAmB;IAE9B,gBAAgB,CAAC;IAEjB,aAAa,CAAE,MAAc,EAAE,MAAc;QAC3C,OAAO,CAAE,SAA0B,EAA4B,EAAE;;YAC/D,MAAM,KAAK,SAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,KAAK,CAAC;YAC3C,MAAM,KAAK,SAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,KAAK,CAAC;YAC3C,IAAK,KAAK,KAAK,KAAK,EAAG;gBACrB,eAAS,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,SAAS,CAAC,EAAG,MAAM,EAAE,KAAK,EAAC,EAAE;gBACpD,OAAO,EAAG,MAAM,EAAE,KAAK,EAAC;aACzB;YACD,eAAS,CAAC,GAAG,CAAC,MAAM,CAAC,0CAAE,SAAS,CAAC,IAAI,EAAE;YACvC,OAAO,IAAI;QACb,CAAC;IACH,CAAC;CAKF;;AApBY,mBAAmB;IAH/B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;;GACW,mBAAmB,CAoB/B;AApB+B;;;;;;;;;;;;;ACPhC;AAAe,miIAAo+H,E;;;;;;;;;;;;ACAn/H;AAAe,4mPAA6iP,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjhP;AAEO;AACc;AAChE,oEAAoE;IAMvD,cAAc,SAAd,cAAc;IAGzB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QADnC,SAAI,GAAS,IAAI,CAAC;IACqB,CAAC;IAExC,iBAAiB,CAAC,cAAsB;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,qEAAW,CAAC,EAAE,GAAC,2BAA2B,EAAC,cAAc,CAAC,CAAC;IACrF,CAAC;CAGF;;YAlBQ,+DAAU;;AAQN,cAAc;IAH1B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;qCAIyB,+DAAU;GAHxB,cAAc,CAU1B;AAV0B;;;;;;;;;;;;;ACV3B;AAAe,6GAA8C,2HAA2H,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvH;AAElC;AACU;AACwC;AACL;AACC;AACF;AAEzB;AACc;AAChE,oEAAoE;AACpE,+DAA+D;IAOlD,gBAAgB,SAAhB,gBAAgB;IAe3B,YAAoB,IAAgB,EAC1B,MAAc,EACd,EAAe,EACf,oBAAyC;QAH/B,SAAI,GAAJ,IAAI,CAAY;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACf,yBAAoB,GAApB,oBAAoB,CAAqB;QAfnD,sBAAiB,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3C,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;YACnF,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,iFAAqB,CAAC,CAAC,CAAC;YAClI,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,iFAAqB,CAAC,CAAC,CAAC;YACpI,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAE,CAAC;YACzF,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzF,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,wEAAY,CAAC,CAAC,CAAC;YACrE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,2EAAe,CAAC,CAAC,CAAC;YAC1E,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACvC,EACC,EAAE,UAAU,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC;IAK/B,CAAC;IAIxD,cAAc;QACZ,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE;YAClC,kDAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;SAC7D;aAAM;YACL,6CAA6C;YAE7C,oDAAoD;YACpD,sBAAsB;YACtB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAE3G,MAAM,YAAY,GAAY;gBAC5B,QAAQ,EAAE,MAAM;gBAChB,SAAS,EAAE,OAAO;gBAClB,WAAW,EAAE,SAAS;gBACtB,UAAU,EAAE,QAAQ;gBACpB,WAAW,EAAE,SAAS;gBACtB,QAAQ,EAAE,MAAM;gBAChB,YAAY,EAAE,QAAQ;aACvB,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,qEAAW,CAAC,EAAE,GAAG,wBAAwB,EAAE,YAAY,EAAE;gBAC3E,OAAO,EAAE;oBACP,cAAc,EAAE,iCAAiC;iBAClD;aACF,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAClB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oBAEpB,kDAAI,CAAC,IAAI,CAAC;wBACR,QAAQ,EAAE,SAAS;wBACnB,IAAI,EAAE,SAAS;wBACf,KAAK,EAAE,mBAAmB;wBAC1B,iBAAiB,EAAE,KAAK;wBACxB,KAAK,EAAE,IAAI;qBACZ,CAAC,CAAC;oBACH,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;oBAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;iBAE3C;qBAAM;oBACL,kDAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;oBAC3D,iCAAiC;iBAClC;YACH,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IAED,aAAa,CAAC,KAAa;;QACzB,OAAO,WAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,0CAAE,OAAO,YAC5C,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,0CAAE,OAAO,EAAC;IAClD,CAAC;IAED,aAAa,CAAC,KAAa;QACzB,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM;eAC/C,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;IACtD,CAAC;IAID,QAAQ;QACN,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;IAGD,eAAe,CAAC,OAAoB;;QAClC,MAAM,KAAK,SAAW,OAAO,CAAC,KAAK,0CAAE,IAAI,EAAE,CAAC;QAC5C,IAAI,KAAK,EAAE;YACT,IAAI,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACnD,IAAI,YAAY,GAAG,CAAC,EAAE;gBACpB,sDAAsD;gBACtD,IAAI,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAChD,IAAI,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBACnD,IAAI,IAAI,GAAW,CAAC,CAAC;gBACrB,IAAI,MAAM,GAAW,CAAC,CAAC;gBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC3C,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;oBAChE,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC3E;gBACD,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,WAAW,CAAC,EAAE;oBAC1E,OAAO,IAAI,CAAC;iBAEb;qBAAM,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,WAAW,EAAE;oBACxD,OAAO,IAAI,CAAC;iBACb;qBAAM;oBACL,OAAO;wBACL,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;iBAAM;gBACL,OAAO;oBACL,MAAM,EAAE,KAAK;iBACd;aACF;SACF;aAAM;YACL,OAAO;gBACL,MAAM,EAAE,KAAK;aACd;SACF;IACH,CAAC;CAEF;;YArIQ,+DAAU;YANV,sDAAM;YACN,0DAAW;YAGX,mFAAmB;;AAYf,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oFAAuC;;KAExC,CAAC;qCAgB0B,+DAAU;QAClB,sDAAM;QACV,0DAAW;QACO,mFAAmB;GAlBxC,gBAAgB,CA2H5B;AA3H4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBqB;AAEU;AAC7B;AACU;IAO5B,uBAAuB,SAAvB,uBAAuB;IAYlC,YAAoB,WAA2B,EAC3B,iBAAgC,EAChC,MAAa;QAFb,gBAAW,GAAX,WAAW,CAAgB;QAC3B,sBAAiB,GAAjB,iBAAiB,CAAe;QAChC,WAAM,GAAN,MAAM,CAAO;QAJjC,iBAAY,GAAS,IAAI,CAAC;IAIW,CAAC;IAEtC,QAAQ;QAEN,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,IAAI,EAAE;YAEjC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC;YAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC;YAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC;YACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC/C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC;YACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;YAC3C,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC;SAClD;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;SACnC;IACH,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE;YACnB,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;SAC3C;aAAM;YACL,MAAM,OAAO,GAAY;gBACvB,WAAW,EAAC,IAAI,CAAC,EAAE;gBACnB,QAAQ,EAAE,IAAI,CAAC,MAAM;gBACrB,SAAS,EAAE,IAAI,CAAC,OAAO;gBACvB,WAAW,EAAE,IAAI,CAAC,SAAS;gBAC3B,UAAU,EAAE,IAAI,CAAC,QAAQ;gBACzB,WAAW,EAAE,IAAI,CAAC,SAAS;gBAC3B,QAAQ,EAAE,IAAI,CAAC,MAAM;gBACrB,YAAY,EAAE,IAAI,CAAC,UAAU;aAC9B,CAAC;YAEF,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,SAAS,CACzD,IAAI,CAAC,EAAE;gBACL,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;oBACpB,kDAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC;yBACzD,IAAI,CAAC,MAAM,CAAC,EAAE;wBACb,IAAI,MAAM,CAAC,KAAK,EAAE;4BAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;yBAC3C;oBACH,CAAC,CAAC,CAAC;iBAEN;qBAAM;oBACL,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;iBAC3C;YACH,CAAC,CAAC,CAAC;SACN;IAEH,CAAC;IAED,eAAe;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5C,CAAC;CAEF;;YA/EQ,uEAAc;YAAd,uEAAc;YAEd,sDAAM;;AAOF,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,4FAA+C;;KAEhD,CAAC;qCAaiC,uEAAc;QACT,uEAAc;QACzB,sDAAM;GAdtB,uBAAuB,CAsEnC;AAtEmC;;;;;;;;;;;;;ACXpC;AAAe,2vFAA4rF,iBAAiB,6IAA6I,cAAc,6IAA6I,eAAe,6IAA6I,gBAAgB,6IAA6I,gBAAgB,6IAA6I,eAAe,6IAA6I,aAAa,o0BAAo0B,E;;;;;;;;;;;;;;;;;;;;;;;;;;ACA95I;AACc;AAC+B;AAC1B;AACG;AACQ;AAIvE,MAAM,MAAM,GAAW;IAErB;QACE,IAAI,EAAE,EAAE;QACR,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,2EAAgB,EAAE;YAC9C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,kGAAuB,EAAE;YAC1D,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE;SACrC;QACD,WAAW,EAAE,CAAC,kFAAiB,CAAC;QAChC,OAAO,EAAE,CAAC,kFAAiB,CAAC;KAC7B;CACF,CAAC;IAMW,oBAAoB,SAApB,oBAAoB;CAAI;AAAxB,oBAAoB;IAJhC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,oBAAoB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;AC5BmB;IAMvC,kBAAkB,SAAlB,kBAAkB;;QAE7B,iBAAY,GAAc,EAAE,CAAC;IAY/B,CAAC;IAVC,SAAS,CAAC,cAAyB,EAAE,SAAiB,EAAE;QACtD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACvB,OAAO,cAAc,CAAC;SACvB;QAED,MAAM,eAAe,GAAG,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;QAC1I,OAAO,eAAe,CAAC;IAEzB,CAAC;CAEF;AAdY,kBAAkB;IAH9B,0DAAI,CAAC;QACJ,IAAI,EAAE,gBAAgB;KACvB,CAAC;GACW,kBAAkB,CAc9B;AAd8B","file":"usuarios-usuarios-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { RouterModule } from '@angular/router';\n\nimport { UsuarioComponent } from './usuario/usuario.component';\nimport { ListarComponent } from './listar/listar.component';\nimport { EditarUsuariosComponent } from './editar-usuarios/editar-usuarios.component';\n\n\nimport { FiltroUsuariosPipe } from './filtrosUsuarios/filtro-usuarios.pipe';\nimport { UsuarioRoutingModule } from './usuario-routing.module';\nimport { MaterialModule } from '../material/material.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\n\n\n\n@NgModule({\n  declarations: [UsuarioComponent,ListarComponent,\n    EditarUsuariosComponent,FiltroUsuariosPipe],\n  imports: [\n  CommonModule,\n  //LayoutModule,\n  RouterModule,\n\n  MaterialModule,\n  MatCardModule,\n  MatDialogModule,\n  UsuarioRoutingModule\n  ]\n})\nexport class UsuariosModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Usuario } from '../model/usuarioInterface';\n//import { ServidorConexion } from 'environments/conexion';\nimport { UsuarioService } from '../service/usuario.service';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css']\n})\nexport class ListarComponent implements OnInit {\n\n  UsuarioLista: Usuario[] = [];\n\n  public buscar: string = '';\n  @ViewChild('txtSearch') txtSearch!: ElementRef<HTMLInputElement>;\n\n  constructor(private http: HttpClient,\n    private userservice: UsuarioService) { }\n\n  ngOnInit(): void {\n    this.listarUsuarios();\n  }\n\n\n  listarUsuarios() {\n    this.http.get<Usuario[]>(environment.ip + 'usuario/listaUsuario').subscribe(\n      data => {\n        this.UsuarioLista = data;\n      }\n    );\n  }\n\n\n\n\n  ObetnerParametroPipe() {\n\n    const valor = this.txtSearch.nativeElement.value;\n    this.buscar = valor;\n    if (valor.trim().length === 0) {\n      return;\n    }\n    this.txtSearch.nativeElement.value = '';\n  }\n\n  obtenerOrden(user: Usuario) {\n    this.userservice.user = user;\n  }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export default \"\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0YXIuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0YXItdXN1YXJpb3MuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, ValidationErrors } from '@angular/forms';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidacionesService {\n\n  constructor() { }\n\n  camposIguales( campo1: string, campo2: string ) {\n    return ( formGroup: AbstractControl ): ValidationErrors | null => {\n      const pass1 = formGroup.get(campo1)?.value;\n      const pass2 = formGroup.get(campo2)?.value;\n      if ( pass1 !== pass2 ) {\n        formGroup.get(campo2)?.setErrors({  cedula: false});\n        return {  cedula: false}\n      } \n      formGroup.get(campo2)?.setErrors(null);\n      return null\n    }\n  }\n\n\n \n\n}\n","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    \\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Editar Usuarios</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n                    \\n                    <div class=\\\"card-body\\\">\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"cedula\\\"  placeholder=\\\"CI/Ruc:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"nombres\\\" placeholder=\\\"Nombre:\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            \\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"apellidos\\\" placeholder=\\\"Apellido:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"direccion\\\" placeholder=\\\"Direccion:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"telefono\\\" placeholder=\\\"Telefono:\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            \\n                            <div class=\\\"col-md-4\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"correo\\\" placeholder=\\\"Email:\\\" type=\\\"email\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"contrasena\\\" placeholder=\\\"Contraseña:\\\" type=\\\"password\\\">\\n                                </mat-form-field>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n\\n                        </div>\\n\\n\\n                        <div class=\\\"row\\\">\\n                            <!-- <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-sucess\\\">GUARDAR</button>-->\\n\\n\\n\\n                            <button mat-raised-button (click)=\\\"editarUsuario()\\\" class=\\\"btn btn-danger pull-right\\\"\\n                                >Actualizar</button>\\n\\n\\n\\n\\n                            <br />\\n                            <br />\\n                          \\n                            <button mat-raised-button class=\\\"btn btn-danger pull-right\\\"\\n                                style=\\\"margin-left:30px\\\"\\n                                (click)=\\\"cancelarUsuario()\\\">Cancelar</button>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Ingresar Usuarios</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                    <form [formGroup]=\\\"formularioUsuario\\\" autocomplete=\\\"off\\\">\\n                        \\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput \\n                                    minlength=\\\"10\\\" maxlength=\\\"13\\\"\\n                                    placeholder=\\\"CI/Ruc:\\\"\\n                                    formControlName=\\\"cedula\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                 *ngIf=\\\"validarCedula('cedula')\\\">\\n                                    La Cedula es Invalida.\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput \\n                                    placeholder=\\\"Nombre:\\\"\\n                                    formControlName=\\\"nombres\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                 *ngIf=\\\"campoNoValido('nombres')\\\">\\n                                Formato de Incorrecto                                 \\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput \\n                                    placeholder=\\\"Apellido:\\\"\\n                                    formControlName=\\\"apellidos\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                *ngIf=\\\"campoNoValido('apellidos')\\\">\\n                               Formato de Incorrecto\\n                               </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput\\n                                    placeholder=\\\"Direccion:\\\"\\n                                    maxlength=\\\"50\\\"\\n                                    formControlName=\\\"direccion\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                *ngIf=\\\"campoNoValido('direccion')\\\">\\n                                  Campos Insuficientes\\n                               </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput\\n                                    maxlength=\\\"15\\\"\\n                                    placeholder=\\\"Telefono:\\\"\\n                                    formControlName=\\\"telefono\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                *ngIf=\\\"campoNoValido('telefono')\\\">\\n                               Campos Insuficientes\\n                               </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput \\n                                    autocomplete=\\\"off\\\" \\n                                    placeholder=\\\"Email:\\\"\\n                                    type=\\\"email\\\"\\n                                    formControlName=\\\"correo\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                  *ngIf=\\\"campoNoValido('correo')\\\">\\n                                   Formato Incorrecto del Correo\\n                                </span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput\\n                                    placeholder=\\\"Contraseña:\\\" \\n                                    type=\\\"password\\\"\\n                                    maxlength=\\\"50\\\"\\n                                    formControlName=\\\"password\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                 *ngIf=\\\"campoNoValido('password')\\\">\\n                                 Debe Contener al menos 8 caracteres\\n                                 minusculas mayúsculas\\n                                 Números\\n                                 Caracteres especiales.\\n                                </span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput\\n                                    placeholder=\\\"Confirmar la contraseña:\\\" \\n                                    type=\\\"password\\\"\\n                                    formControlName=\\\"password2\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                *ngIf=\\\"campoNoValido('password2')\\\">\\n                                 Las contraseñas deben de ser iguales\\n                                </span>\\n     \\n                                \\n                            </div>\\n                        </div>\\n                    </form>\\n                     <br>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                            <button mat-raised-button (click)=\\\"agregarusuario()\\\" class=\\\"btn btn-danger pull-right\\\"\\n                               >GUARDAR</button>\\n                            </div>\\n                            \\n                            <br />\\n                            <br />\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button (click)=\\\"cancelar()\\\" class=\\\"btn btn-primary pull-right\\\">\\n                                  Cancelar</button>\\n                              </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { Usuario } from '../model/usuarioInterface';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n//import { ServidorConexion } from '../../../environments/conexion';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  user:Usuario=null;\n  constructor(private http:HttpClient) { }\n\n  actualizarUsuario(userActualizar:Usuario){\n  return this.http.put<any>(environment.ip+'usuario/actualizarUsuario',userActualizar);\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c3VhcmlvLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { nombreApellidoPattern } from '../../../app/validator/Validaciones';\nimport { emailPattern, validarPassword } from '../../validator/Validaciones';\nimport { ValidacionesService } from '../../validator/validaciones.service';\nimport { Usuario } from '../model/usuarioInterface';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n//import { ServidorConexion } from '../../../environments/conexion';\n//import { ServidorConexion } from 'src/environments/conexion';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent {\n\n\n  formularioUsuario: FormGroup = this.fb.group({\n    cedula: ['', [Validators.required, Validators.maxLength(10), this.verificarCedula]],\n    nombres: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(nombreApellidoPattern)]],\n    apellidos: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(nombreApellidoPattern)]],\n    telefono: ['', [Validators.required, Validators.minLength(9), Validators.maxLength(15) ]],\n    direccion: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n    correo: ['', [Validators.required, Validators.pattern(emailPattern)]],\n    password: ['', [Validators.required, Validators.pattern(validarPassword)]],\n    password2: ['', [Validators.required]],\n  },\n    { validators: [this.validadiionesService.camposIguales('password', 'password2')] });\n\n  constructor(private http: HttpClient,\n    private router: Router,\n    private fb: FormBuilder,\n    private validadiionesService: ValidacionesService) { }\n\n\n\n  agregarusuario() {\n    if (this.formularioUsuario.invalid) {\n      Swal.fire('Error en la Creacion', \"Campos Vacios\", 'error');\n    } else {\n      // console.log(this.formularioUsuario.value);\n\n      //   const validacion = this.validarCamposCliente();\n      //   if (validacion) {\n      const { cedula, nombres, apellidos, telefono, direccion, correo, password } = this.formularioUsuario.value;\n\n      const usuarioEnvio: Usuario = {\n        \"cedula\": cedula,\n        \"nombres\": nombres,\n        \"apellidos\": apellidos,\n        \"telefono\": telefono,\n        \"direccion\": direccion,\n        \"correo\": correo,\n        \"contrasena\": password\n      };\n\n      this.http.post<any>(environment.ip + 'usuario/guardarUsuario', usuarioEnvio, {\n        headers: {\n          'Content-Type': 'application/json; charset=UTF-8'\n        }\n      }).subscribe(data => {\n        if (data.codigo == 1) {\n\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Creacion Correcta',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.formularioUsuario.reset();\n          this.router.navigate(['/usuario/listar']);\n\n        } else {\n          Swal.fire('Error en la Creacion', data.mensaje, 'warning');\n          //this.formularioUsuario.reset();\n        }\n      });\n    }\n\n  }\n\n  campoNoValido(campo: string) {\n    return this.formularioUsuario.get(campo)?.invalid\n      && this.formularioUsuario.get(campo)?.touched;\n  }\n\n  validarCedula(campo: string) {\n    return this.formularioUsuario.controls[campo].errors\n      && this.formularioUsuario.controls[campo].touched;\n  }\n\n\n\n  cancelar() {\n    this.formularioUsuario.reset();\n    this.router.navigate(['/usuario/listar']);\n  }\n\n\n  verificarCedula(control: FormControl) {\n    const valor: string = control.value?.trim();\n    if (valor) {\n      let tercerDigito = parseInt(valor.substring(2, 3));\n      if (tercerDigito < 6) {\n        // El ultimo digito se lo considera dígito verificador\n        let coefValCedula = [2, 1, 2, 1, 2, 1, 2, 1, 2];\n        let verificador = parseInt(valor.substring(9, 10));\n        let suma: number = 0;\n        let digito: number = 0;\n        for (let i = 0; i < (valor.length - 1); i++) {\n          digito = parseInt(valor.substring(i, i + 1)) * coefValCedula[i];\n          suma += ((parseInt((digito % 10) + '') + (parseInt((digito / 10) + ''))));\n        }\n        suma = Math.round(suma);\n        if ((Math.round(suma % 10) == 0) && (Math.round(suma % 10) == verificador)) {\n          return null;\n\n        } else if ((10 - (Math.round(suma % 10))) == verificador) {\n          return null;\n        } else {\n          return {\n            cedula: false\n          }\n        }\n      } else {\n        return {\n          cedula: false\n        }\n      }\n    } else {\n      return {\n        cedula: false\n      }\n    }\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Usuario } from '../model/usuarioInterface';\nimport { UsuarioService } from '../service/usuario.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-editar-usuarios',\n  templateUrl: './editar-usuarios.component.html',\n  styleUrls: ['./editar-usuarios.component.css']\n})\nexport class EditarUsuariosComponent implements OnInit {\n  id: number;\n  cedula: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  direccion: string;\n  correo: string;\n  contrasena: string;\n  \n  usuarionuevo:Usuario=null;\n\n  constructor(private userservice: UsuarioService,\n              private actualizarService:UsuarioService,\n              private router:Router) { }\n\n  ngOnInit(): void {\n   \n    if (this.userservice.user != null) {\n\n      this.id = this.userservice.user.idUsuario;\n      this.cedula = this.userservice.user.cedula;\n      this.nombres = this.userservice.user.nombres;\n      this.apellidos = this.userservice.user.apellidos;\n      this.telefono = this.userservice.user.telefono;\n      this.direccion = this.userservice.user.direccion;\n      this.correo = this.userservice.user.correo;\n      this.contrasena=this.userservice.user.contrasena;\n    } else {\n      console.log(this.userservice.user)\n    }\n  }\n\n  editarUsuario() {\n    if (this.id == null) {\n      Swal.fire('Error', 'miki error', 'error');\n    } else {\n      const usuario: Usuario = {\n        \"idUsuario\":this.id,\n        \"cedula\": this.cedula,\n        \"nombres\": this.nombres,\n        \"apellidos\": this.apellidos,\n        \"telefono\": this.telefono,\n        \"direccion\": this.direccion,\n        \"correo\": this.correo,\n        \"contrasena\": this.contrasena\n      };\n\n      this.actualizarService.actualizarUsuario(usuario).subscribe(\n        data =>{\n          if (data.codigo == 1) {\n            Swal.fire('Actualizacion Completa', data.mensaje, 'success')\n              .then(result => {\n                if (result.value) {\n                  this.router.navigate(['/usuario/listar']);\n                }\n              });\n\n          } else {\n            Swal.fire('Error', data.mensaje, 'error');\n          }\n        });\n    }\n    \n  }\n\n  cancelarUsuario(){\n    this.router.navigate(['/usuario/listar']);\n  }\n\n}\n","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title \\\">Lista de Usuarios</h4>\\n                        <p class=\\\"card-category\\\">Usuarios registrados en el sistema</p>\\n\\n                    </div>\\n                    <br />\\n\\n                    <div class=\\\"col-md-12\\\">\\n                        <a id=\\\"btn\\\" class=\\\"btn btn-success\\\" routerLink=\\\"/usuario/crear\\\" style=\\\"margin-right:10px\\\">\\n                            Añadir Nuevo</a>\\n                    </div>\\n                   \\n                    <br>\\n                    <div class=\\\"col-md-6\\\">\\n                    \\n\\n                        <input type=\\\"text\\\" class=\\\"form-control mb-2\\\"  placeholder=\\\"Buscar Usuario\\\" #txtSearch\\n                        (keyup.enter)=\\\"ObetnerParametroPipe()\\\" autocomplete=\\\"off\\\" minlength=\\\"4\\\" maxlength=\\\"10\\\" size=\\\"22\\\"\\n                            placeholder=\\\"Buscar por Cedula\\\">\\n                    </div>\\n\\n\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table\\\">\\n                                <thead class=\\\" text-primary\\\">\\n                                    <th>\\n                                        ID\\n                                    </th>\\n                                    <th>\\n                                        CEDULA\\n                                    </th>\\n                                    <th>\\n                                        NOMBRE:\\n                                    </th>\\n                                    <th>\\n                                        APELLIDO:\\n                                    </th>\\n                                    <th>\\n                                        DIRECCION:\\n                                    </th>\\n                                    <th>\\n                                        TELEFONO:\\n                                    </th>\\n                                    <th>\\n                                        EMAIL:\\n                                    </th>\\n                                    <th>\\n                                        ACCIONES:\\n                                    </th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let item of UsuarioLista | filtroUsuarios:buscar\\\">\\n                                        <td>\\n                                            {{ item.idUsuario}}\\n                                        </td>\\n                                        <td>\\n                                            {{ item.cedula}}\\n                                        </td>\\n                                        <td>\\n                                            {{ item.nombres}}\\n                                        </td>\\n                                        <td>\\n                                            {{item.apellidos}}\\n                                        </td>\\n                                        <td>\\n                                            {{item.direccion}}\\n                                        </td>\\n                                        <td>\\n                                            {{item.telefono}}\\n                                        </td>\\n                                        <td>\\n                                            {{item.correo}}\\n                                        </td>\\n                                        \\n                                        <td>\\n                                            <button type=\\\"butto\\\" class=\\\"btn btn-info\\\"\\n                                                class=\\\"btn btn-info\\\"\\n                                                (click)=\\\"obtenerOrden(item)\\\"\\n                                                routerLink=\\\"/usuario/actualizar\\\">Actualizar</button>\\n                                        </td>\\n                                       \\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EditarUsuariosComponent } from './editar-usuarios/editar-usuarios.component';\r\nimport { ListarComponent } from './listar/listar.component';\r\nimport { UsuarioComponent } from './usuario/usuario.component';\r\nimport { ValidarTokenGuard } from '../auth/guards/validar-token.guard';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    children: [\r\n      { path: 'listar', component: ListarComponent },\r\n      { path: 'crear', component: UsuarioComponent },\r\n      { path: 'actualizar', component: EditarUsuariosComponent },\r\n      { path: '**', redirectTo: 'listar' },\r\n    ],\r\n    canActivate: [ValidarTokenGuard],\r\n    canLoad: [ValidarTokenGuard]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsuarioRoutingModule { }","import { Pipe, PipeTransform } from '@angular/core';\nimport { Usuario } from '../model/usuarioInterface';\n\n@Pipe({\n  name: 'filtroUsuarios'\n})\nexport class FiltroUsuariosPipe implements PipeTransform {\n\n  ListaUsuario: Usuario[] = [];\n\n  transform(ArregloUsuario: Usuario[], buscar: string = ''): Usuario[] {\n    if (buscar.length === 0) {\n      return ArregloUsuario;\n    }\n\n    const filteredUsuario = ArregloUsuario.filter(usuario => usuario.cedula.trim().toLowerCase().includes(buscar.trim().toLocaleLowerCase()));\n    return filteredUsuario;\n    \n  }\n\n}\n"],"sourceRoot":"webpack:///"}