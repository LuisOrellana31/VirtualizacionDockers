{"version":3,"sources":["./src/app/proveedores/actualizar-proveedor/actualizar-proveedor.component.ts","./src/app/validator/Validaciones.ts","./src/app/proveedores/service/proveedor.service.ts","./src/app/proveedores/proveedor/proveedor.component.html","./src/app/proveedores/nuevo-proveedor/nuevo-proveedor.component.css","./src/app/proveedores/actualizar-proveedor/actualizar-proveedor.component.html","./src/app/proveedores/nuevo-proveedor/nuevo-proveedor.component.html","./src/app/proveedores/proveedor/proveedor.component.ts","./src/app/proveedores/actualizar-proveedor/actualizar-proveedor.component.css","./src/app/proveedores/proveedor-routing.module.ts","./src/app/proveedores/nuevo-proveedor/nuevo-proveedor.component.ts","./src/app/proveedores/filtradoProveedor/filtrado.pipe.ts","./src/app/proveedores/proveedor/proveedor.component.css","./src/app/auth/guards/validar-token.guard.ts","./src/app/proveedores/proveedores.module.ts"],"names":[],"mappings":"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","file":"proveedores-proveedores-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n//import { environment } from 'environments/conexion';\nimport Swal from 'sweetalert2';\n\nimport { ProveedorService } from '../service/proveedor.service';\nimport { Proveedor } from '../model/proveedor-interface';\nimport { environment } from '../../../environments/environment';\n\n\n@Component({\n  selector: 'app-actualizar-proveedor',\n  templateUrl: './actualizar-proveedor.component.html',\n  styleUrls: ['./actualizar-proveedor.component.css']\n})\nexport class ActualizarProveedorComponent implements OnInit {\n\n  id: number;\n  cedula: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  direccion: string;\n  correo: string;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private service: ProveedorService) { }\n\n  ngOnInit(): void {\n    if (this.service.prov != null) {\n      this.id = this.service.prov.id;\n      this.cedula = this.service.prov.cedula;\n      this.nombres = this.service.prov.nombres;\n      this.apellidos = this.service.prov.apellidos;\n      this.telefono = this.service.prov.telefono;\n      this.direccion = this.service.prov.direccion;\n      this.correo = this.service.prov.correo;\n    } else {\n      \n    }\n\n\n\n  }\n\n  actualizarProveedor() {\n    if (this.id == undefined) {\n      Swal.fire('Error', 'No se pudo Actualizar', 'error');\n    } else {\n\n\n      const prove: Proveedor = {\n        \"id\": this.id,\n        \"cedula\": this.cedula,\n        \"nombres\": this.nombres,\n        \"apellidos\": this.apellidos,\n        \"telefono\": this.telefono,\n        \"direccion\": this.direccion,\n        \"correo\": this.correo\n      };\n\n      this.http.put<any>(environment.ip + 'usuario/actualizarProveedor',\n        prove,\n        {\n          headers: {\n            'Content-Type': 'application/json; charset=UTF-8'\n          }\n        }).subscribe(\n          data => {\n            \n            if (data.codigo == 1) {\n              Swal.fire('Actualizacion Completa', data.mensaje, 'success')\n                .then(result => {\n                  if (result.value) {\n                    this.router.navigate(['/proveedor/proveedores']);\n                  }\n                });\n\n            } else {\n              Swal.fire('Error', data.mensaje, 'error');\n            }\n\n          });\n    }\n  }\n\n\n  cancelarProveedor(){\n    this.router.navigate(['/proveedor/proveedores']);\n  }\n\n}\n","export const emailPattern         : string = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\r\nexport const nombreApellidoPattern: string = \"([a-zA-Z',.-]+( [a-zA-Z',.-]+)*){2,30}\";\r\nexport const validarPassword      : string = '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}';","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Proveedor } from '../model/proveedor-interface';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProveedorService {\n\n  prov: Proveedor = null;\n  constructor(private http: HttpClient) { }\n\n  listarProveedor() {\n    const url = environment.ip + 'usuario/listaProveedor';\n    return this.http.get<Proveedor[]>(url);\n  }\n\n}\n","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title \\\">Tabla Proveedores</h4>\\n                        <p class=\\\"card-category\\\"> Aqui tiene disponible la informacion de los proveedores </p>\\n\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                        <h1 class=\\\"h1\\\"></h1>\\n\\n                        <div>\\n\\n                            <a class=\\\"btn btn-success\\\" routerLink=\\\"/proveedor/nuevoProveedor\\\" style=\\\"margin-right:10px\\\">\\n                                Añadir\\n                                Nuevo</a>\\n                            <br>\\n                            <br>\\n\\n                            <input type=\\\"text\\\" class=\\\"form-control mb-2\\\" placeholder=\\\"Buscar por cedula\\\" #txtSearch\\n                                (keyup)=\\\"filtroProveedor(txtSearch.value)\\\" />\\n\\n                        </div>\\n\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table\\\">\\n                                <thead class=\\\" text-primary\\\">\\n                                    <th>\\n                                        ID/RUC\\n                                    </th>\\n                                    <th>\\n                                        Nombre\\n                                    </th>\\n                                    <th>\\n                                        Apellido\\n                                    </th>\\n                                    <th>\\n                                        Direccion\\n                                    </th>\\n                                    <th>\\n                                        Telefono\\n                                    </th>\\n\\n\\n                                    <th>\\n                                        Email\\n                                    </th>\\n                                    <th>\\n                                        Acciones\\n                                    </th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let proveedor of listaProveedores |filtrado:search\\\">\\n                                        <td>\\n                                            {{proveedor.cedula}}\\n                                        </td>\\n                                        <td>\\n                                            {{proveedor.nombres}}\\n                                        </td>\\n                                        <td>\\n                                            {{proveedor.apellidos}}\\n                                        </td>\\n                                        <td>\\n                                            {{proveedor.direccion}}\\n                                        </td>\\n                                        <td class=\\\"text-primary\\\">\\n                                            {{proveedor.telefono}}\\n                                        </td>\\n\\n                                        <td>\\n                                            {{proveedor.correo}}\\n                                        </td>\\n                                        <td>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"getProveedor(proveedor)\\\"\\n                                                routerLink=\\\"/proveedor/actualizar\\\">Actualizar</button>\\n                                        </td>\\n                                        <td>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\">Eliminar</button>\\n\\n\\n                                        </td>\\n\\n                                    </tr>\\n\\n\\n\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJudWV2by1wcm92ZWVkb3IuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Actualizar Proveedor</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cedula\\\" placeholder=\\\"CI/RUC\\\"\\n                                    required>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"nombres\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre\\\"\\n                                    required>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"apellidos\\\" placeholder=\\\"Apellido\\\"\\n                                    required>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"direccion\\\" placeholder=\\\"Direccion\\\"\\n                                    required>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"tel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"telefono\\\" id=\\\"telefono\\\"\\n                                    name=\\\"telefono\\\" placeholder=\\\"Telefono\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"correo\\\" id=\\\"email\\\" name=\\\"email\\\"\\n                                    placeholder=\\\"Email\\\" required>\\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-3\\\">\\n                                    <a class=\\\"btn btn-success\\\" (click)=\\\"actualizarProveedor()\\\" style=\\\"margin-right:10px\\\"> Guardar</a>\\n                                </div>\\n                                <div class=\\\"col-md-3\\\">\\n                                    <a class=\\\"btn btn-success\\\"  class=\\\"btn btn-danger pull-right\\\"\\n                                  (click)=\\\"cancelarProveedor()\\\" style=\\\"margin-right:10px\\\"> Cancelar</a>\\n                                </div>\\n                            </div>\\n                           \\n                        </div>\\n\\n\\n\\n                    </div>\\n                </div>\\n                \\n            </div>\\n\\n        </div>\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Perfil Proveedor</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                        <form [formGroup]=\\\"formularioProveedor\\\" autocomplete=\\\"off\\\">\\n\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"13\\\" minlength=\\\"10\\\"\\n                                        placeholder=\\\"CI/RUC\\\" formControlName=\\\"cedula\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"validarCedula('cedula')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre\\\"\\n                                        formControlName=\\\"nombres\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('nombres')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Apellido\\\"\\n                                        formControlName=\\\"apellidos\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('apellidos')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Direccion\\\"\\n                                        formControlName=\\\"direccion\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('direccion')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Telefono\\\"\\n                                        formControlName=\\\"telefono\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('telefono')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\"\\n                                        formControlName=\\\"correo\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('correo')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n\\n                        </form>\\n\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <a class=\\\"btn btn-success\\\" (click)=\\\"guardarProveedor()\\\"> Guardar</a>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <button mat-raised-button (click)=\\\"cancelar()\\\" class=\\\"btn btn-primary pull-right\\\">\\n                            Cancelar</button>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n//import { environment } from 'environments/conexion';\nimport { Proveedor } from '../model/proveedor-interface';\n\nimport { ProveedorService } from '../service/proveedor.service';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n//import { environment } from '../../../environments/conexion';\n\n\n@Component({\n  selector: 'app-proveedor',\n  templateUrl: './proveedor.component.html',\n  styleUrls: ['./proveedor.component.css']\n\n})\nexport class ProveedorComponent implements OnInit {\n\n  listaProveedores: Proveedor[] = [];\n  public search: string = '';\n\n  constructor(private http: HttpClient, private serviceProveedor: ProveedorService) { }\n\n  ngOnInit(): void {\n    this.listarProveedor();\n  }\n\n  listarProveedor() {\n    this.http.get<Proveedor[]>(environment.ip + 'usuario/listaProveedor').subscribe(data => {\n      this.listaProveedores = data;\n    }, error => console.log('oops', error)\n    );\n  }\n\n  filtroProveedor(search: string) {\n    this.search = search;\n    //console.log(search);\n    \n  }\n\n  getProveedor(proveedorRecuperado: Proveedor) {\n    this.serviceProveedor.prov = proveedorRecuperado;\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY3R1YWxpemFyLXByb3ZlZWRvci5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NuevoProveedorComponent } from './nuevo-proveedor/nuevo-proveedor.component';\r\nimport { ProveedorComponent } from './proveedor/proveedor.component';\r\nimport { ActualizarProveedorComponent } from './actualizar-proveedor/actualizar-proveedor.component';\r\nimport { ValidarTokenGuard } from '../auth/guards/validar-token.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n    {\r\n        path: '',\r\n        children: [\r\n            { path: 'proveedores', component: ProveedorComponent },\r\n            { path: 'nuevoProveedor', component: NuevoProveedorComponent },\r\n            { path: 'actualizar', component: ActualizarProveedorComponent },\r\n            { path: '**', redirectTo: 'proveedores' },\r\n        ],\r\n        canActivate: [ValidarTokenGuard],\r\n        canLoad: [ValidarTokenGuard]\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProveedorRoutingModule { }","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { Router } from '@angular/router';\n//import { ServidorConexion } from 'environments/conexion';\nimport { Proveedor } from '../model/proveedor-interface';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../environments/environment';\n//import { ServidorConexion } from '../../../environments/conexion';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { emailPattern, nombreApellidoPattern } from '../../validator/Validaciones';\n\n\n@Component({\n  selector: 'app-nuevo-proveedor',\n  templateUrl: './nuevo-proveedor.component.html',\n  styleUrls: ['./nuevo-proveedor.component.css']\n})\nexport class NuevoProveedorComponent {\n\n\n  formularioProveedor: FormGroup = this.fb.group({\n    cedula: ['', [Validators.required, Validators.maxLength(10), this.verificarCedula]],\n    nombres: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(nombreApellidoPattern)]],\n    apellidos: ['', []],\n    telefono: ['', [Validators.required, Validators.minLength(9), Validators.maxLength(15)]],\n    direccion: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n    correo: ['', [Validators.required, Validators.pattern(emailPattern)]],\n  });\n\n  constructor(private http: HttpClient,\n    private fb: FormBuilder,\n    private router: Router) { }\n\n\n  guardarProveedor() {\n    if (!this.formularioProveedor.invalid) {\n      const { cedula, nombres, apellidos, telefono, direccion, correo } = this.formularioProveedor.value;\n\n      const prove: Proveedor = {\n        \"cedula\": cedula,\n        \"nombres\": nombres,\n        \"apellidos\": apellidos || 'none',\n        \"telefono\": telefono,\n        \"direccion\": direccion,\n        \"correo\": correo\n      };\n\n\n      this.http.post<any>(environment.ip + 'usuario/guardarProveedor', prove, {\n        headers: {\n          'Content-Type': 'application/json; charset=UTF-8'\n        }\n      }).subscribe(data => {\n        this.formularioProveedor.reset();\n        if (data.codigo == 1) {\n\n          Swal.fire('Creacion Correcta', data.mensaje, 'success').\n            then(result => {\n              if (result.value) {\n                this.router.navigate(['/proveedor/proveedores']);\n              }\n            });\n        } else {\n          Swal.fire('Error en la Creacion', data.mensaje, 'warning')\n        }\n      });\n\n    } else {\n      Swal.fire('Error, Campos Vacios', 'Por favor, Llene los Campos', 'error')\n    }\n  }\n\n\n\n\n\n  cancelar() {\n\n    //  this.formularioProveedor.reset();\n    this.router.navigate(['/proveedor/proveedores']);\n  }\n\n  // limpiarProveedor() {\n  //   this.formularioProveedor.reset();\n  // }\n\n\n  campoNoValido(campo: string) {\n    return this.formularioProveedor.get(campo)?.invalid\n      && this.formularioProveedor.get(campo)?.touched;\n  }\n\n  validarCedula(campo: string) {\n    return this.formularioProveedor.controls[campo].errors\n      && this.formularioProveedor.controls[campo].touched;\n  }\n\n  verificarCedula(control: FormControl) {\n    const valor: string = control.value?.trim();\n    if (valor) {\n      let tercerDigito = parseInt(valor.substring(2, 3));\n      if (tercerDigito < 6) {\n        // El ultimo digito se lo considera dígito verificador\n        let coefValCedula = [2, 1, 2, 1, 2, 1, 2, 1, 2];\n        let verificador = parseInt(valor.substring(9, 10));\n        let suma: number = 0;\n        let digito: number = 0;\n        for (let i = 0; i < (valor.length - 1); i++) {\n          digito = parseInt(valor.substring(i, i + 1)) * coefValCedula[i];\n          suma += ((parseInt((digito % 10) + '') + (parseInt((digito / 10) + ''))));\n        }\n        suma = Math.round(suma);\n        if ((Math.round(suma % 10) == 0) && (Math.round(suma % 10) == verificador)) {\n          return null;\n\n        } else if ((10 - (Math.round(suma % 10))) == verificador) {\n          return null;\n        } else {\n          return {\n            cedula: false\n          }\n        }\n      } else {\n        return {\n          cedula: false\n        }\n      }\n    } else {\n      return {\n        cedula: false\n      }\n    }\n  }\n\n\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Proveedor } from '../model/proveedor-interface';\n\n@Pipe({\n  name: 'filtrado'\n})\nexport class FiltradoPipe implements PipeTransform {\n\n  Proveedores: Proveedor[] = [];\n\n  transform(listaProveedor: Proveedor[], buscar: string): Proveedor[] {\n    if (buscar.length === 0) {\n      return listaProveedor;\n    }\n\n\n    const filteredUsuario = listaProveedor.filter(proveedor => proveedor.cedula.trim().toLowerCase().includes(buscar.trim().toLocaleLowerCase()));\n    return filteredUsuario;\n    // for (const prov of lista1) {\n\n    //   if (prov.cedula == search) {\n    //     this.Proveedores.push(prov);\n    //   }\n\n    // }\n\n    // return this.Proveedores;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm92ZWVkb3IuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad, Router } from '@angular/router';\nimport { map } from 'jquery';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidarTokenGuard implements CanActivate, CanLoad {\n\n  constructor(private auth: AuthService,\n    private router: Router) { }\n\n  canActivate(): Observable<boolean> | boolean {\n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n  canLoad(): Observable<boolean> | boolean {\n   \n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NuevoProveedorComponent } from './nuevo-proveedor/nuevo-proveedor.component';\nimport { ProveedorComponent } from './proveedor/proveedor.component';\nimport { FiltradoPipe } from './filtradoProveedor/filtrado.pipe';\nimport { MaterialModule } from '../material/material.module';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { RouterModule } from '@angular/router';\nimport { ProveedorRoutingModule } from './proveedor-routing.module';\nimport { ActualizarProveedorComponent } from './actualizar-proveedor/actualizar-proveedor.component';\n\n\n\n@NgModule({\n  declarations: [NuevoProveedorComponent,ProveedorComponent,FiltradoPipe, ActualizarProveedorComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    LayoutModule,\n    RouterModule,\n    ProveedorRoutingModule\n  ]\n})\nexport class ProveedoresModule { }\n"],"sourceRoot":"webpack:///"}