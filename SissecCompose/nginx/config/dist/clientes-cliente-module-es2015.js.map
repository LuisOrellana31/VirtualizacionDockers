{"version":3,"sources":["./src/app/validator/Validaciones.ts","./src/app/clientes/cliente.module.ts","./src/app/clientes/lista-cliente/lista-cliente.component.ts","./src/app/clientes/lista-cliente/lista-cliente.component.html","./src/app/clientes/service/servicio-cliente.service.ts","./src/app/clientes/actualizar-cliente/actualizar-cliente.component.ts","./src/app/clientes/nuevo-cliente/nuevo-cliente.component.ts","./src/app/clientes/pipe/filtro-cliente.pipe.ts","./src/app/clientes/lista-cliente/lista-cliente.component.css","./src/app/clientes/cliente-routing.module.ts","./src/app/clientes/nuevo-cliente/nuevo-cliente.component.css","./src/app/clientes/actualizar-cliente/actualizar-cliente.component.html","./src/app/clientes/actualizar-cliente/actualizar-cliente.component.css","./src/app/clientes/nuevo-cliente/nuevo-cliente.component.html","./src/app/auth/guards/validar-token.guard.ts"],"names":[],"mappings":"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","file":"clientes-cliente-module-es2015.js","sourcesContent":["export const emailPattern         : string = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\r\nexport const nombreApellidoPattern: string = \"([a-zA-Z',.-]+( [a-zA-Z',.-]+)*){2,30}\";\r\nexport const validarPassword      : string = '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { NuevoClienteComponent } from './nuevo-cliente/nuevo-cliente.component';\nimport { ClienteRoutingModule } from './cliente-routing.module';\nimport { ListaClienteComponent } from './lista-cliente/lista-cliente.component';\nimport { ActualizarClienteComponent } from './actualizar-cliente/actualizar-cliente.component';\nimport { FiltroClientePipe } from './pipe/filtro-cliente.pipe';\nimport { MaterialModule } from '../material/material.module';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [NuevoClienteComponent, ListaClienteComponent, ActualizarClienteComponent, FiltroClientePipe],\n  imports: [\n    CommonModule,\n    ClienteRoutingModule,\n    MaterialModule,\n    RouterModule\n  ]\n})\nexport class ClienteModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Cliente } from '../../garantia/model/OrdenTrabajo';\n//import { Cliente } from 'app/garantia/model/OrdenTrabajo';\nimport { ServicioClienteService } from '../service/servicio-cliente.service';\n\n@Component({\n  selector: 'app-lista-cliente',\n  templateUrl: './lista-cliente.component.html',\n  styleUrls: ['./lista-cliente.component.css']\n})\nexport class ListaClienteComponent implements OnInit {\n\n  \n  Clientes:Cliente[]=[]\n\n  public buscar: string = '';\n  @ViewChild('txtSearch') txtSearch!: ElementRef<HTMLInputElement>;\n\n\n  constructor(private clienteService:ServicioClienteService) { }\n\n  ngOnInit(): void {\n    this.listarClientes();\n  }\n\n  listarClientes(){\n    this.clienteService.listarCliente().subscribe(\n      datos => {\n       if (datos) {\n         this.Clientes=datos;\n       }\n      }\n    );\n  }\n\n  obtenerCliente(cliente:Cliente){\n    this.clienteService.cliente=cliente;\n  }\n\n  ObetnerParametroPipe() {\n\n    const valor = this.txtSearch.nativeElement.value;\n    this.buscar = valor;\n    if (valor.trim().length === 0) {\n      return;\n    }\n    this.txtSearch.nativeElement.value = '';\n  }\n\n}\n","export default \"<div class=\\\"main-content\\\">\\n\\n    <div class=\\\"container-fluid\\\">\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title \\\">Clientes</h4>\\n\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                        <div>\\n                            <a class=\\\"btn btn-success\\\" routerLink=\\\"/cliente/nuevo\\\" style=\\\"margin-right:10px\\\">\\n\\n                                Nuevo Cliente</a>\\n                            <br>\\n                            <input type=\\\"text\\\" class=\\\"form-control mb-2\\\" placeholder=\\\"Buscar por Cedula\\\"\\n                                (keyup.enter)=\\\"ObetnerParametroPipe()\\\" #txtSearch />\\n\\n                        </div>\\n\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table\\\">\\n                                <thead class=\\\" text-primary\\\">\\n\\n                                    <th>\\n                                        Cedula\\n                                    </th>\\n                                    <th>\\n                                        Nombres\\n                                    </th>\\n                                    <th>\\n                                        Apellidos\\n                                    </th>\\n                                    <th>\\n                                        Correo\\n                                    </th>\\n                                    <th>\\n                                        Direccion\\n                                    </th>\\n                                    <th>\\n                                        Telefono\\n                                    </th>\\n\\n                                    <th>\\n                                        Accion\\n                                    </th>\\n\\n                                </thead>\\n                                <!-- filtroOrden:search -->\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let item of Clientes | filtroCliente :buscar\\\">\\n                                        <td>\\n                                            {{item.cedula}}\\n\\n                                        </td>\\n\\n                                        <td>\\n                                            {{item?.nombres}}\\n\\n                                        </td>\\n                                        <td>\\n                                            {{item?.apellidos}}\\n                                        </td>\\n                                        <td>\\n                                            {{item?.correo}}\\n                                        </td>\\n                                        <td>\\n                                            {{item.direccion}}\\n                                        </td>\\n                                        <td>\\n                                            {{item?.telefono}}\\n                                        </td>\\n\\n                                        <td>\\n                                            <button routerLink=\\\"/cliente/actualizar\\\" class=\\\"btn btn-info\\\"\\n                                                (click)=\\\"obtenerCliente(item)\\\" color=\\\"primary\\\">Actualizar</button>\\n\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n//import { environment } from '../../../environments/conexion';\nimport { Cliente } from '../../garantia/model/OrdenTrabajo';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicioClienteService {\n\n  cliente:Cliente=null;\n\n  constructor(private http:HttpClient) { }\n\n  listarCliente(){\n    return this.http.get<Cliente[]>(environment.ip+'usuario/listaCliente');\n  }\n\n  crearCliente(cliente:Cliente){\n    return this.http.post<any>(environment.ip+'usuario/guardarCliente',cliente);\n  }\n\n  actualizarCliente(cliente:Cliente){\n    return this.http.put<any>(environment.ip+'usuario/actualizarCliente',cliente);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ServicioClienteService } from '../service/servicio-cliente.service';\nimport { Cliente } from '../../garantia/model/OrdenTrabajo';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-actualizar-cliente',\n  templateUrl: './actualizar-cliente.component.html',\n  styleUrls: ['./actualizar-cliente.component.css']\n})\nexport class ActualizarClienteComponent implements OnInit {\n\n  idCliente: number;\n  cedula: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  direccion: string;\n  correo: string;\n\n  constructor(private clienteService: ServicioClienteService,\n              private router:Router) { }\n\n  ngOnInit(): void {\n\n    if (this.clienteService.cliente != null) {\n      this.idCliente = this.clienteService.cliente.idCliente;\n      this.cedula = this.clienteService.cliente.cedula;\n      this.nombres = this.clienteService.cliente.nombres;\n      this.apellidos = this.clienteService.cliente.apellidos;\n      this.telefono = this.clienteService.cliente.telefono;\n      this.direccion = this.clienteService.cliente.direccion;\n      this.correo = this.clienteService.cliente.correo;\n    }\n\n  }\n\n\n  actualizarCliente() {\n    if (this.idCliente == undefined) {\n      Swal.fire('Error', 'miki error', 'error');\n    } else {\n      const client: Cliente = {\n\n        idCliente:this.idCliente,\n        cedula:this.cedula,\n        nombres: this.nombres,\n        apellidos: this.apellidos,\n        telefono: this.telefono,\n        direccion: this.direccion,\n        correo: this.correo\n      }\n\n      this.clienteService.actualizarCliente(client).subscribe(\n        data =>{\n          if (data.codigo == 1) {\n            Swal.fire('Actualizacion Completa', data.mensaje, 'success')\n              .then(result => {\n                if (result.value) {\n                  this.router.navigate(['/cliente/listar']);\n                }\n              });\n\n          } else {\n            Swal.fire('Error', data.mensaje, 'error');\n          }\n        });\n    } \n  }\n\n\n\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Cliente } from '../../garantia/model/OrdenTrabajo';\nimport { ServicioClienteService } from '../service/servicio-cliente.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { FormControl, FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { emailPattern, nombreApellidoPattern } from '../../validator/Validaciones';\n\n@Component({\n  selector: 'app-nuevo-cliente',\n  templateUrl: './nuevo-cliente.component.html',\n  styleUrls: ['./nuevo-cliente.component.css']\n})\nexport class NuevoClienteComponent {\n\n  constructor(private clienteService: ServicioClienteService,\n              private router: Router,\n              private fb: FormBuilder) { }\n\n\n\n\n\n  miFormulario: FormGroup = this.fb.group({\n    cedula: ['', [Validators.required, Validators.maxLength(10), this.verificarCedula],],\n    nombres: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(nombreApellidoPattern)]],\n    apellidos: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(nombreApellidoPattern)]],\n    telefono: ['', [Validators.required, Validators.minLength(9), Validators.maxLength(15)]],\n    direccion: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n    correo: ['', [Validators.required, Validators.pattern(emailPattern)],],\n  });\n\n  crearCliente() {\n\n    if (this.miFormulario.invalid) {\n      Swal.fire('Error, Campos Vacios', 'Por favor, Llene los Campos', 'error')\n    } else {\n\n      const { cedula, nombres, apellidos, telefono, direccion, correo,  } = this.miFormulario.value;\n      const client: Cliente = {\n        cedula: cedula,\n        nombres: nombres,\n        apellidos: apellidos,\n        telefono: telefono,\n        direccion: direccion,\n        correo: correo\n      };\n\n      this.clienteService.crearCliente(client).subscribe(\n        data => {\n          if (data.codigo == 1) {\n            this.miFormulario.reset();\n            Swal.fire('Ingreso Correcto', 'Cliente Ingresado Correctamente', 'success');\n            this.router.navigate(['/cliente/listar']);\n          } else {\n            Swal.fire('Error en el Ingreso', data.mensaje, 'warning')\n          }\n        });\n    }\n\n  }\n\n\n\n\n  validarCedula(campo: string) {\n    return this.miFormulario.controls[campo].errors\n      && this.miFormulario.controls[campo].touched;\n  }\n\n\n\n  get emailErrorMsg(): string {\n    const errors = this.miFormulario.get('correo')?.errors;\n    if (errors?.required) {\n      return 'Email es obligatorio';\n    } else if (errors?.pattern) {\n      return 'El valor ingresado no tiene formato de correo';\n    } else if (errors?.emailTomado) {\n      return 'El email ya fue tomado';\n    }\n\n    return '';\n  }\n\n  campoNoValido(campo: string) {\n    return this.miFormulario.get(campo)?.invalid\n      && this.miFormulario.get(campo)?.touched;\n  }\n\n\n  cancelar() {\n   this.miFormulario.reset();\n    this.router.navigate(['/cliente/listar']);\n  }\n\n \n  verificarCedula(control: FormControl) {\n    const valor: string = control.value?.trim();\n    if (valor) {\n      let tercerDigito = parseInt(valor.substring(2, 3));\n      if (tercerDigito < 6) {\n        // El ultimo digito se lo considera dígito verificador\n        let coefValCedula = [2, 1, 2, 1, 2, 1, 2, 1, 2];\n        let verificador = parseInt(valor.substring(9, 10));\n        let suma: number = 0;\n        let digito: number = 0;\n        for (let i = 0; i < (valor.length - 1); i++) {\n          digito = parseInt(valor.substring(i, i + 1)) * coefValCedula[i];\n          suma += ((parseInt((digito % 10) + '') + (parseInt((digito / 10) + ''))));\n        }\n        suma = Math.round(suma);\n        if ((Math.round(suma % 10) == 0) && (Math.round(suma % 10) == verificador)) {\n          return null;\n\n        } else if ((10 - (Math.round(suma % 10))) == verificador) {\n          return null;\n        } else {\n          return {\n            cedula: false\n          }\n        }\n      } else {\n        return {\n          cedula: false\n        }\n      }\n    } else {\n      return {\n        cedula: false\n      }\n    }\n  }\n\n\n\n\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Cliente } from '../../garantia/model/OrdenTrabajo';\n\n@Pipe({\n  name: 'filtroCliente'\n})\nexport class FiltroClientePipe implements PipeTransform {\n\n  transform(clientes: Cliente[], buscar: string = ''): Cliente[] {\n    if (buscar.length === 0) {\n      return clientes;\n    }\n\n    const filteredUsuario = clientes.filter(clientes => clientes.cedula.trim().toLowerCase().includes(buscar.trim().toLocaleLowerCase()));\n    return filteredUsuario;\n    \n  \n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0YS1jbGllbnRlLmNvbXBvbmVudC5jc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ValidarTokenGuard } from '../auth/guards/validar-token.guard';\nimport { ListaClienteComponent } from './lista-cliente/lista-cliente.component';\nimport { NuevoClienteComponent } from './nuevo-cliente/nuevo-cliente.component';\nimport { ActualizarClienteComponent } from './actualizar-cliente/actualizar-cliente.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n        { path: 'listar', component: ListaClienteComponent },\n        { path: 'nuevo', component: NuevoClienteComponent },\n        { path: 'actualizar', component: ActualizarClienteComponent },\n        { path: '**', redirectTo: 'listar' }\n    ],\n     canActivate:[ValidarTokenGuard],\n     canLoad:[ValidarTokenGuard]\n},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClienteRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJudWV2by1jbGllbnRlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Ingresar Usuarios</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\"\\n                                       #txtcedula [(ngModel)]=\\\"cedula\\\" placeholder=\\\"CI/Ruc:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" maxlength=\\\"60\\\" #txtnombres [(ngModel)]=\\\"nombres\\\" placeholder=\\\"Nombre:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" #txtapellidos maxlength=\\\"60\\\"\\n                                        [(ngModel)]=\\\"apellidos\\\" placeholder=\\\"Apellido:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" maxlength=\\\"120\\\" #txtdireccion\\n                                        [(ngModel)]=\\\"direccion\\\" placeholder=\\\"Direccion:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" maxlength=\\\"15\\\" #txttelefono\\n                                        [(ngModel)]=\\\"telefono\\\" placeholder=\\\"Telefono:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" maxlength=\\\"120\\\" #txtcorreo [(ngModel)]=\\\"correo\\\" placeholder=\\\"Email:\\\"\\n                                        type=\\\"email\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                        </div>\\n                        <br>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button (click)=\\\"actualizarCliente()\\\"\\n                                    class=\\\"btn btn-danger pull-right\\\">GUARDAR</button>\\n                            </div>\\n\\n                            <br />\\n                            <br />\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button\\n                               \\n                                routerLink='/cliente/listar'\\n                                class=\\\"btn btn-primary pull-right\\\">\\n                                    Cancelar</button>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY3R1YWxpemFyLWNsaWVudGUuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Ingresar Usuarios</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                        \\n                        <form autocomplete=\\\"off\\\" [formGroup]=\\\"miFormulario\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-5\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput placeholder=\\\"CI/Ruc:\\\" maxlength=\\\"10\\\"\\n                                            formControlName='cedula'>\\n                                    </mat-form-field>\\n                                    <span class=\\\"form-text text-danger\\\"\\n                                    *ngIf=\\\"validarCedula('cedula')\\\">\\n                                    La Cedula es Invalida.\\n                                </span>\\n                                </div>\\n\\n                                <div class=\\\"col-md-3\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput maxlength=\\\"60\\\" placeholder=\\\"Nombre:\\\"\\n                                        formControlName=\\\"nombres\\\">\\n                                    </mat-form-field>\\n                                    <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('nombres')\\\">\\n                                        Campos Insuficientes\\n                                    </span>\\n                                </div>\\n\\n                                <div class=\\\"col-md-3\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput maxlength=\\\"60\\\" placeholder=\\\"Apellido:\\\"\\n                                        formControlName=\\\"apellidos\\\">\\n                                    </mat-form-field>\\n                                    <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('apellidos')\\\">\\n                                        Campos Insuficientes\\n                                    </span>\\n                                </div>\\n\\n                                <div class=\\\"col-md-3\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput maxlength=\\\"120\\\" placeholder=\\\"Direccion:\\\"\\n                                        formControlName='direccion'>\\n                                    </mat-form-field>\\n                                    <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('direccion')\\\">\\n                                        Campos Insuficientes\\n                                    </span>\\n                                </div>\\n\\n                                <div class=\\\"col-md-3\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput maxlength=\\\"15\\\" placeholder=\\\"Telefono:\\\"\\n                                        formControlName='telefono'>\\n                                    </mat-form-field>\\n                                    <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('telefono')\\\">\\n                                        Campos Insuficientes\\n                                    </span>\\n                                </div>\\n\\n                                <div class=\\\"col-md-4\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput maxlength=\\\"120\\\" #txtcorreo placeholder=\\\"Email:\\\" type=\\\"email\\\"\\n                                        formControlName='correo'>\\n                                    </mat-form-field>\\n                                    <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('correo')\\\">\\n                                        {{ emailErrorMsg }}\\n                                    </span>\\n                                </div>\\n\\n                            </div>\\n                        </form>\\n                        <br>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button (click)=\\\"crearCliente()\\\"\\n                                    class=\\\"btn btn-danger pull-right\\\">GUARDAR</button>\\n                            </div>\\n\\n                            <br />\\n                            <br />\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button (click)=\\\"cancelar()\\\"\\n                                    class=\\\"btn btn-primary pull-right\\\">\\n                                    Cancelar</button>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad, Router } from '@angular/router';\nimport { map } from 'jquery';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidarTokenGuard implements CanActivate, CanLoad {\n\n  constructor(private auth: AuthService,\n    private router: Router) { }\n\n  canActivate(): Observable<boolean> | boolean {\n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n  canLoad(): Observable<boolean> | boolean {\n   \n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}