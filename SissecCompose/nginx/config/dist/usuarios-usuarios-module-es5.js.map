{"version":3,"sources":["webpack:///src/app/usuarios/usuarios.module.ts","webpack:///src/app/usuarios/listar/listar.component.ts","webpack:///src/app/usuarios/listar/listar.component.css","webpack:///src/app/usuarios/editar-usuarios/editar-usuarios.component.css","webpack:///src/app/validator/validaciones.service.ts","webpack:///src/app/usuarios/editar-usuarios/editar-usuarios.component.html","webpack:///src/app/usuarios/usuario/usuario.component.html","webpack:///src/app/usuarios/service/usuario.service.ts","webpack:///src/app/usuarios/usuario/usuario.component.css","webpack:///src/app/usuarios/usuario/usuario.component.ts","webpack:///src/app/usuarios/editar-usuarios/editar-usuarios.component.ts","webpack:///src/app/usuarios/listar/listar.component.html","webpack:///src/app/usuarios/usuario-routing.module.ts","webpack:///src/app/usuarios/filtrosUsuarios/filtro-usuarios.pipe.ts"],"names":["UsuariosModule","declarations","imports","ListarComponent","http","userservice","UsuarioLista","buscar","listarUsuarios","get","ip","subscribe","data","valor","txtSearch","nativeElement","value","trim","length","user","selector","template","ValidacionesService","campo1","campo2","formGroup","pass1","pass2","setErrors","cedula","providedIn","UsuarioService","userActualizar","put","UsuarioComponent","router","fb","validadiionesService","formularioUsuario","group","required","maxLength","verificarCedula","nombres","minLength","pattern","apellidos","telefono","direccion","correo","password","password2","validators","camposIguales","invalid","fire","usuarioEnvio","post","headers","codigo","position","icon","title","showConfirmButton","timer","reset","navigate","mensaje","campo","touched","controls","errors","control","tercerDigito","parseInt","substring","coefValCedula","verificador","suma","digito","i","Math","round","EditarUsuariosComponent","actualizarService","usuarionuevo","id","idUsuario","contrasena","console","log","usuario","actualizarUsuario","then","result","routes","path","children","component","redirectTo","canActivate","canLoad","UsuarioRoutingModule","forChild","exports","FiltroUsuariosPipe","ListaUsuario","ArregloUsuario","filteredUsuario","filter","toLowerCase","includes","toLocaleLowerCase","name"],"mappings":"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","file":"usuarios-usuarios-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { RouterModule } from '@angular/router';\n\nimport { UsuarioComponent } from './usuario/usuario.component';\nimport { ListarComponent } from './listar/listar.component';\nimport { EditarUsuariosComponent } from './editar-usuarios/editar-usuarios.component';\n\n\nimport { FiltroUsuariosPipe } from './filtrosUsuarios/filtro-usuarios.pipe';\nimport { UsuarioRoutingModule } from './usuario-routing.module';\nimport { MaterialModule } from '../material/material.module';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\n\n\n\n@NgModule({\n  declarations: [UsuarioComponent,ListarComponent,\n    EditarUsuariosComponent,FiltroUsuariosPipe],\n  imports: [\n  CommonModule,\n  //LayoutModule,\n  RouterModule,\n\n  MaterialModule,\n  MatCardModule,\n  MatDialogModule,\n  UsuarioRoutingModule\n  ]\n})\nexport class UsuariosModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Usuario } from '../model/usuarioInterface';\n//import { ServidorConexion } from 'environments/conexion';\nimport { UsuarioService } from '../service/usuario.service';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css']\n})\nexport class ListarComponent implements OnInit {\n\n  UsuarioLista: Usuario[] = [];\n\n  public buscar: string = '';\n  @ViewChild('txtSearch') txtSearch!: ElementRef<HTMLInputElement>;\n\n  constructor(private http: HttpClient,\n    private userservice: UsuarioService) { }\n\n  ngOnInit(): void {\n    this.listarUsuarios();\n  }\n\n\n  listarUsuarios() {\n    this.http.get<Usuario[]>(environment.ip + 'usuario/listaUsuario').subscribe(\n      data => {\n        this.UsuarioLista = data;\n      }\n    );\n  }\n\n\n\n\n  ObetnerParametroPipe() {\n\n    const valor = this.txtSearch.nativeElement.value;\n    this.buscar = valor;\n    if (valor.trim().length === 0) {\n      return;\n    }\n    this.txtSearch.nativeElement.value = '';\n  }\n\n  obtenerOrden(user: Usuario) {\n    this.userservice.user = user;\n  }\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export default \"\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0YXIuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0YXItdXN1YXJpb3MuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, ValidationErrors } from '@angular/forms';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidacionesService {\n\n  constructor() { }\n\n  camposIguales( campo1: string, campo2: string ) {\n    return ( formGroup: AbstractControl ): ValidationErrors | null => {\n      const pass1 = formGroup.get(campo1)?.value;\n      const pass2 = formGroup.get(campo2)?.value;\n      if ( pass1 !== pass2 ) {\n        formGroup.get(campo2)?.setErrors({  cedula: false});\n        return {  cedula: false}\n      } \n      formGroup.get(campo2)?.setErrors(null);\n      return null\n    }\n  }\n\n\n \n\n}\n","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    \\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Editar Usuarios</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n                    \\n                    <div class=\\\"card-body\\\">\\n\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"cedula\\\"  placeholder=\\\"CI/Ruc:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"nombres\\\" placeholder=\\\"Nombre:\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            \\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"apellidos\\\" placeholder=\\\"Apellido:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"direccion\\\" placeholder=\\\"Direccion:\\\">\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"telefono\\\" placeholder=\\\"Telefono:\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            \\n                            <div class=\\\"col-md-4\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"correo\\\" placeholder=\\\"Email:\\\" type=\\\"email\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput autocomplete=\\\"off\\\" [(ngModel)]=\\\"contrasena\\\" placeholder=\\\"Contraseña:\\\" type=\\\"password\\\">\\n                                </mat-form-field>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n\\n                        </div>\\n\\n\\n                        <div class=\\\"row\\\">\\n                            <!-- <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-sucess\\\">GUARDAR</button>-->\\n\\n\\n\\n                            <button mat-raised-button (click)=\\\"editarUsuario()\\\" class=\\\"btn btn-danger pull-right\\\"\\n                                >Actualizar</button>\\n\\n\\n\\n\\n                            <br />\\n                            <br />\\n                          \\n                            <button mat-raised-button class=\\\"btn btn-danger pull-right\\\"\\n                                style=\\\"margin-left:30px\\\"\\n                                (click)=\\\"cancelarUsuario()\\\">Cancelar</button>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Ingresar Usuarios</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                    <form [formGroup]=\\\"formularioUsuario\\\" autocomplete=\\\"off\\\">\\n                        \\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-5\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput \\n                                    minlength=\\\"10\\\" maxlength=\\\"13\\\"\\n                                    placeholder=\\\"CI/Ruc:\\\"\\n                                    formControlName=\\\"cedula\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                 *ngIf=\\\"validarCedula('cedula')\\\">\\n                                    La Cedula es Invalida.\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput \\n                                    placeholder=\\\"Nombre:\\\"\\n                                    formControlName=\\\"nombres\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                 *ngIf=\\\"campoNoValido('nombres')\\\">\\n                                Formato de Incorrecto                                 \\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput \\n                                    placeholder=\\\"Apellido:\\\"\\n                                    formControlName=\\\"apellidos\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                *ngIf=\\\"campoNoValido('apellidos')\\\">\\n                               Formato de Incorrecto\\n                               </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput\\n                                    placeholder=\\\"Direccion:\\\"\\n                                    maxlength=\\\"50\\\"\\n                                    formControlName=\\\"direccion\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                *ngIf=\\\"campoNoValido('direccion')\\\">\\n                                  Campos Insuficientes\\n                               </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput\\n                                    maxlength=\\\"15\\\"\\n                                    placeholder=\\\"Telefono:\\\"\\n                                    formControlName=\\\"telefono\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                *ngIf=\\\"campoNoValido('telefono')\\\">\\n                               Campos Insuficientes\\n                               </span>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput \\n                                    autocomplete=\\\"off\\\" \\n                                    placeholder=\\\"Email:\\\"\\n                                    type=\\\"email\\\"\\n                                    formControlName=\\\"correo\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                  *ngIf=\\\"campoNoValido('correo')\\\">\\n                                   Formato Incorrecto del Correo\\n                                </span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput\\n                                    placeholder=\\\"Contraseña:\\\" \\n                                    type=\\\"password\\\"\\n                                    maxlength=\\\"50\\\"\\n                                    formControlName=\\\"password\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                 *ngIf=\\\"campoNoValido('password')\\\">\\n                                 Debe Contener al menos 8 caracteres\\n                                 minusculas mayúsculas\\n                                 Números\\n                                 Caracteres especiales.\\n                                </span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput\\n                                    placeholder=\\\"Confirmar la contraseña:\\\" \\n                                    type=\\\"password\\\"\\n                                    formControlName=\\\"password2\\\"\\n                                    >\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\"\\n                                *ngIf=\\\"campoNoValido('password2')\\\">\\n                                 Las contraseñas deben de ser iguales\\n                                </span>\\n     \\n                                \\n                            </div>\\n                        </div>\\n                    </form>\\n                     <br>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                            <button mat-raised-button (click)=\\\"agregarusuario()\\\" class=\\\"btn btn-danger pull-right\\\"\\n                               >GUARDAR</button>\\n                            </div>\\n                            \\n                            <br />\\n                            <br />\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button (click)=\\\"cancelar()\\\" class=\\\"btn btn-primary pull-right\\\">\\n                                  Cancelar</button>\\n                              </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";","import { Injectable } from '@angular/core';\nimport { Usuario } from '../model/usuarioInterface';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n//import { ServidorConexion } from '../../../environments/conexion';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  user:Usuario=null;\n  constructor(private http:HttpClient) { }\n\n  actualizarUsuario(userActualizar:Usuario){\n  return this.http.put<any>(environment.ip+'usuario/actualizarUsuario',userActualizar);\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c3VhcmlvLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, ViewChild, ElementRef } from '@angular/core';\n\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { nombreApellidoPattern } from '../../../app/validator/Validaciones';\nimport { emailPattern, validarPassword } from '../../validator/Validaciones';\nimport { ValidacionesService } from '../../validator/validaciones.service';\nimport { Usuario } from '../model/usuarioInterface';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n//import { ServidorConexion } from '../../../environments/conexion';\n//import { ServidorConexion } from 'src/environments/conexion';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.component.html',\n  styleUrls: ['./usuario.component.css']\n})\nexport class UsuarioComponent {\n\n\n  formularioUsuario: FormGroup = this.fb.group({\n    cedula: ['', [Validators.required, Validators.maxLength(10), this.verificarCedula]],\n    nombres: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(nombreApellidoPattern)]],\n    apellidos: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(nombreApellidoPattern)]],\n    telefono: ['', [Validators.required, Validators.minLength(9), Validators.maxLength(15) ]],\n    direccion: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n    correo: ['', [Validators.required, Validators.pattern(emailPattern)]],\n    password: ['', [Validators.required, Validators.pattern(validarPassword)]],\n    password2: ['', [Validators.required]],\n  },\n    { validators: [this.validadiionesService.camposIguales('password', 'password2')] });\n\n  constructor(private http: HttpClient,\n    private router: Router,\n    private fb: FormBuilder,\n    private validadiionesService: ValidacionesService) { }\n\n\n\n  agregarusuario() {\n    if (this.formularioUsuario.invalid) {\n      Swal.fire('Error en la Creacion', \"Campos Vacios\", 'error');\n    } else {\n      // console.log(this.formularioUsuario.value);\n\n      //   const validacion = this.validarCamposCliente();\n      //   if (validacion) {\n      const { cedula, nombres, apellidos, telefono, direccion, correo, password } = this.formularioUsuario.value;\n\n      const usuarioEnvio: Usuario = {\n        \"cedula\": cedula,\n        \"nombres\": nombres,\n        \"apellidos\": apellidos,\n        \"telefono\": telefono,\n        \"direccion\": direccion,\n        \"correo\": correo,\n        \"contrasena\": password\n      };\n\n      this.http.post<any>(environment.ip + 'usuario/guardarUsuario', usuarioEnvio, {\n        headers: {\n          'Content-Type': 'application/json; charset=UTF-8'\n        }\n      }).subscribe(data => {\n        if (data.codigo == 1) {\n\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Creacion Correcta',\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.formularioUsuario.reset();\n          this.router.navigate(['/usuario/listar']);\n\n        } else {\n          Swal.fire('Error en la Creacion', data.mensaje, 'warning');\n          //this.formularioUsuario.reset();\n        }\n      });\n    }\n\n  }\n\n  campoNoValido(campo: string) {\n    return this.formularioUsuario.get(campo)?.invalid\n      && this.formularioUsuario.get(campo)?.touched;\n  }\n\n  validarCedula(campo: string) {\n    return this.formularioUsuario.controls[campo].errors\n      && this.formularioUsuario.controls[campo].touched;\n  }\n\n\n\n  cancelar() {\n    this.formularioUsuario.reset();\n    this.router.navigate(['/usuario/listar']);\n  }\n\n\n  verificarCedula(control: FormControl) {\n    const valor: string = control.value?.trim();\n    if (valor) {\n      let tercerDigito = parseInt(valor.substring(2, 3));\n      if (tercerDigito < 6) {\n        // El ultimo digito se lo considera dígito verificador\n        let coefValCedula = [2, 1, 2, 1, 2, 1, 2, 1, 2];\n        let verificador = parseInt(valor.substring(9, 10));\n        let suma: number = 0;\n        let digito: number = 0;\n        for (let i = 0; i < (valor.length - 1); i++) {\n          digito = parseInt(valor.substring(i, i + 1)) * coefValCedula[i];\n          suma += ((parseInt((digito % 10) + '') + (parseInt((digito / 10) + ''))));\n        }\n        suma = Math.round(suma);\n        if ((Math.round(suma % 10) == 0) && (Math.round(suma % 10) == verificador)) {\n          return null;\n\n        } else if ((10 - (Math.round(suma % 10))) == verificador) {\n          return null;\n        } else {\n          return {\n            cedula: false\n          }\n        }\n      } else {\n        return {\n          cedula: false\n        }\n      }\n    } else {\n      return {\n        cedula: false\n      }\n    }\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Usuario } from '../model/usuarioInterface';\nimport { UsuarioService } from '../service/usuario.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-editar-usuarios',\n  templateUrl: './editar-usuarios.component.html',\n  styleUrls: ['./editar-usuarios.component.css']\n})\nexport class EditarUsuariosComponent implements OnInit {\n  id: number;\n  cedula: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  direccion: string;\n  correo: string;\n  contrasena: string;\n  \n  usuarionuevo:Usuario=null;\n\n  constructor(private userservice: UsuarioService,\n              private actualizarService:UsuarioService,\n              private router:Router) { }\n\n  ngOnInit(): void {\n   \n    if (this.userservice.user != null) {\n\n      this.id = this.userservice.user.idUsuario;\n      this.cedula = this.userservice.user.cedula;\n      this.nombres = this.userservice.user.nombres;\n      this.apellidos = this.userservice.user.apellidos;\n      this.telefono = this.userservice.user.telefono;\n      this.direccion = this.userservice.user.direccion;\n      this.correo = this.userservice.user.correo;\n      this.contrasena=this.userservice.user.contrasena;\n    } else {\n      console.log(this.userservice.user)\n    }\n  }\n\n  editarUsuario() {\n    if (this.id == null) {\n      Swal.fire('Error', 'miki error', 'error');\n    } else {\n      const usuario: Usuario = {\n        \"idUsuario\":this.id,\n        \"cedula\": this.cedula,\n        \"nombres\": this.nombres,\n        \"apellidos\": this.apellidos,\n        \"telefono\": this.telefono,\n        \"direccion\": this.direccion,\n        \"correo\": this.correo,\n        \"contrasena\": this.contrasena\n      };\n\n      this.actualizarService.actualizarUsuario(usuario).subscribe(\n        data =>{\n          if (data.codigo == 1) {\n            Swal.fire('Actualizacion Completa', data.mensaje, 'success')\n              .then(result => {\n                if (result.value) {\n                  this.router.navigate(['/usuario/listar']);\n                }\n              });\n\n          } else {\n            Swal.fire('Error', data.mensaje, 'error');\n          }\n        });\n    }\n    \n  }\n\n  cancelarUsuario(){\n    this.router.navigate(['/usuario/listar']);\n  }\n\n}\n","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title \\\">Lista de Usuarios</h4>\\n                        <p class=\\\"card-category\\\">Usuarios registrados en el sistema</p>\\n\\n                    </div>\\n                    <br />\\n\\n                    <div class=\\\"col-md-12\\\">\\n                        <a id=\\\"btn\\\" class=\\\"btn btn-success\\\" routerLink=\\\"/usuario/crear\\\" style=\\\"margin-right:10px\\\">\\n                            Añadir Nuevo</a>\\n                    </div>\\n                   \\n                    <br>\\n                    <div class=\\\"col-md-6\\\">\\n                    \\n\\n                        <input type=\\\"text\\\" class=\\\"form-control mb-2\\\"  placeholder=\\\"Buscar Usuario\\\" #txtSearch\\n                        (keyup.enter)=\\\"ObetnerParametroPipe()\\\" autocomplete=\\\"off\\\" minlength=\\\"4\\\" maxlength=\\\"10\\\" size=\\\"22\\\"\\n                            placeholder=\\\"Buscar por Cedula\\\">\\n                    </div>\\n\\n\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table\\\">\\n                                <thead class=\\\" text-primary\\\">\\n                                    <th>\\n                                        ID\\n                                    </th>\\n                                    <th>\\n                                        CEDULA\\n                                    </th>\\n                                    <th>\\n                                        NOMBRE:\\n                                    </th>\\n                                    <th>\\n                                        APELLIDO:\\n                                    </th>\\n                                    <th>\\n                                        DIRECCION:\\n                                    </th>\\n                                    <th>\\n                                        TELEFONO:\\n                                    </th>\\n                                    <th>\\n                                        EMAIL:\\n                                    </th>\\n                                    <th>\\n                                        ACCIONES:\\n                                    </th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let item of UsuarioLista | filtroUsuarios:buscar\\\">\\n                                        <td>\\n                                            {{ item.idUsuario}}\\n                                        </td>\\n                                        <td>\\n                                            {{ item.cedula}}\\n                                        </td>\\n                                        <td>\\n                                            {{ item.nombres}}\\n                                        </td>\\n                                        <td>\\n                                            {{item.apellidos}}\\n                                        </td>\\n                                        <td>\\n                                            {{item.direccion}}\\n                                        </td>\\n                                        <td>\\n                                            {{item.telefono}}\\n                                        </td>\\n                                        <td>\\n                                            {{item.correo}}\\n                                        </td>\\n                                        \\n                                        <td>\\n                                            <button type=\\\"butto\\\" class=\\\"btn btn-info\\\"\\n                                                class=\\\"btn btn-info\\\"\\n                                                (click)=\\\"obtenerOrden(item)\\\"\\n                                                routerLink=\\\"/usuario/actualizar\\\">Actualizar</button>\\n                                        </td>\\n                                       \\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EditarUsuariosComponent } from './editar-usuarios/editar-usuarios.component';\r\nimport { ListarComponent } from './listar/listar.component';\r\nimport { UsuarioComponent } from './usuario/usuario.component';\r\nimport { ValidarTokenGuard } from '../auth/guards/validar-token.guard';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {\r\n    path: '',\r\n    children: [\r\n      { path: 'listar', component: ListarComponent },\r\n      { path: 'crear', component: UsuarioComponent },\r\n      { path: 'actualizar', component: EditarUsuariosComponent },\r\n      { path: '**', redirectTo: 'listar' },\r\n    ],\r\n    canActivate: [ValidarTokenGuard],\r\n    canLoad: [ValidarTokenGuard]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsuarioRoutingModule { }","import { Pipe, PipeTransform } from '@angular/core';\nimport { Usuario } from '../model/usuarioInterface';\n\n@Pipe({\n  name: 'filtroUsuarios'\n})\nexport class FiltroUsuariosPipe implements PipeTransform {\n\n  ListaUsuario: Usuario[] = [];\n\n  transform(ArregloUsuario: Usuario[], buscar: string = ''): Usuario[] {\n    if (buscar.length === 0) {\n      return ArregloUsuario;\n    }\n\n    const filteredUsuario = ArregloUsuario.filter(usuario => usuario.cedula.trim().toLowerCase().includes(buscar.trim().toLocaleLowerCase()));\n    return filteredUsuario;\n    \n  }\n\n}\n"]}