{"version":3,"sources":["webpack:///src/app/categoria/crear-categoria/crear-categoria.component.ts","webpack:///src/app/categoria/crear-categoria/crear-categoria.component.css","webpack:///src/app/categoria/lista-categoria/lista-categoria.component.css","webpack:///src/app/categoria/crear-categoria/crear-categoria.component.html","webpack:///src/app/categoria/categoria.module.ts","webpack:///src/app/categoria/lista-categoria/lista-categoria.component.ts","webpack:///src/app/categoria/service/categoria.service.ts","webpack:///src/app/categoria/categoria-routing.module.ts","webpack:///src/app/auth/guards/validar-token.guard.ts","webpack:///src/app/categoria/lista-categoria/lista-categoria.component.html"],"names":["CrearCategoriaComponent","serviceCategoria","fb","categoria","formularioCategoria","group","nombre","required","minLength","listarCategoria","campo","controls","errors","touched","invalid","fire","value","cat","crearCategoria","subscribe","data","console","log","reset","listaCategoria","selector","template","CategoriaModule","declarations","imports","ListaCategoriaComponent","CategoriaService","http","url","ip","post","headers","get","providedIn","routes","path","children","component","redirectTo","canActivate","canLoad","CategoriaRoutingModule","forChild","exports","ValidarTokenGuard","auth","router"],"mappings":"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","file":"categoria-categoria-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Categoria } from '../../producto/model/producto-Interface';\nimport { CategoriaService } from '../service/categoria.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-crear-categoria',\n  templateUrl: './crear-categoria.component.html',\n  styleUrls: ['./crear-categoria.component.css']\n})\nexport class CrearCategoriaComponent implements OnInit {\n\n\n  categoria: Categoria[] = [];\n  formularioCategoria: FormGroup = this.fb.group({\n    nombre: ['', [Validators.required, Validators.minLength(3)]],\n  });\n  constructor(private serviceCategoria: CategoriaService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.listarCategoria();\n  }\n\n  ValidarCampos(campo: string) {\n    return this.formularioCategoria.controls[campo].errors\n      && this.formularioCategoria.controls[campo].touched;\n  }\n\n  crearCategoria() {\n    if (this.formularioCategoria.invalid) {\n      Swal.fire('Error, Campos Vacios', 'Por favor, Llene los Campos', 'error')\n    } else {\n      const { nombre }=this.formularioCategoria.value;\n      const cat: Categoria = {\n        \"nombre\": nombre\n      };\n      this.serviceCategoria.crearCategoria(cat).subscribe(\n        data => {\n          console.log(data);\n          this.formularioCategoria.reset();\n          this.listarCategoria();\n        }\n      );\n    }\n\n  }\n\n  listarCategoria() {\n    this.serviceCategoria.listaCategoria().subscribe(\n      data => {\n        this.categoria = data;\n      }\n    );\n  }\n\n  cancelar(){\n    this.formularioCategoria.reset();\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjcmVhci1jYXRlZ29yaWEuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0YS1jYXRlZ29yaWEuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Categoria</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"col-md-6\\\">\\n\\n                        <form class=\\\"example-form\\\" [formGroup]=\\\"formularioCategoria\\\" autocomplete=\\\"off\\\">\\n                            <p>\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput placeholder=\\\"Modelo Producto\\\" type=\\\"text\\\" formControlName='nombre'>\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"ValidarCampos('nombre')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </p>\\n                        </form>\\n                        <br>\\n                        <br>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button class=\\\"btn btn-danger pull-right\\\" (click)=\\\"crearCategoria()\\\">\\n                                    Agregar</button>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"cancelar()\\\">\\n                                    Cancelar</button>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button class=\\\"btn btn-info\\\" (click)=\\\"listarCategoria()\\\"\\n                                    color=\\\"primary\\\">Listar</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <br>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"\\\">\\n                            <table class=\\\"table table-hover \\\">\\n\\n                                <thead class=\\\"table-dark\\\">\\n                                    <th>\\n                                        Nombre de la Categoria\\n                                    </th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let item of categoria\\\">\\n                                        <td>\\n                                            {{item.nombre}}\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoriaRoutingModule } from './categoria-routing.module';\nimport { ListaCategoriaComponent } from './lista-categoria/lista-categoria.component';\nimport { CrearCategoriaComponent } from './crear-categoria/crear-categoria.component';\nimport { MaterialModule } from '../material/material.module';\n\n\n@NgModule({\n  declarations: [\n    ListaCategoriaComponent,\n    CrearCategoriaComponent\n  ],\n  imports: [\n    CommonModule,\n    CategoriaRoutingModule,\n    MaterialModule\n  ]\n})\nexport class CategoriaModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lista-categoria',\n  templateUrl: './lista-categoria.component.html',\n  styleUrls: ['./lista-categoria.component.css']\n})\nexport class ListaCategoriaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriaService {\n\n  constructor(private http:HttpClient) { }\n\n\n  crearCategoria(categoria:Categoria){\n    const url=environment.ip+'inventario/guardarCategoria';\n    return this.http.post<any>(url,categoria,{headers: \n      {'Content-Type': 'application/json; charset=UTF-8'}}\n      );\n  }\n\n  listaCategoria(){\n    const url=environment.ip+'inventario/listaCategoria';\n    return this.http.get<Categoria[]>(url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListaCategoriaComponent } from './lista-categoria/lista-categoria.component';\nimport { CrearCategoriaComponent } from './crear-categoria/crear-categoria.component';\nimport { ValidarTokenGuard } from '../auth/guards/validar-token.guard';\n\nconst routes: Routes = [\n  {\n    path:'',\n    children:[\n      {\n        path: 'crear',\n        component:CrearCategoriaComponent\n      },\n      {\n        path: 'listar',\n        component:ListaCategoriaComponent\n      },\n      { path: '**', redirectTo: 'crear' },\n    ],\n    canActivate:[ValidarTokenGuard],\n    canLoad:[ValidarTokenGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriaRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad, Router } from '@angular/router';\nimport { map } from 'jquery';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidarTokenGuard implements CanActivate, CanLoad {\n\n  constructor(private auth: AuthService,\n    private router: Router) { }\n\n  canActivate(): Observable<boolean> | boolean {\n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n  canLoad(): Observable<boolean> | boolean {\n   \n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n\n\n}\n","export default \"<p>lista-categoria works!</p>\\n\";"]}