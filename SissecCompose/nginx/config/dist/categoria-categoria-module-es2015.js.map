{"version":3,"sources":["./src/app/categoria/crear-categoria/crear-categoria.component.ts","./src/app/categoria/crear-categoria/crear-categoria.component.css","./src/app/categoria/lista-categoria/lista-categoria.component.css","./src/app/categoria/crear-categoria/crear-categoria.component.html","./src/app/categoria/categoria.module.ts","./src/app/categoria/lista-categoria/lista-categoria.component.ts","./src/app/categoria/service/categoria.service.ts","./src/app/categoria/categoria-routing.module.ts","./src/app/auth/guards/validar-token.guard.ts","./src/app/categoria/lista-categoria/lista-categoria.component.html"],"names":[],"mappings":"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","file":"categoria-categoria-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Categoria } from '../../producto/model/producto-Interface';\nimport { CategoriaService } from '../service/categoria.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-crear-categoria',\n  templateUrl: './crear-categoria.component.html',\n  styleUrls: ['./crear-categoria.component.css']\n})\nexport class CrearCategoriaComponent implements OnInit {\n\n\n  categoria: Categoria[] = [];\n  formularioCategoria: FormGroup = this.fb.group({\n    nombre: ['', [Validators.required, Validators.minLength(3)]],\n  });\n  constructor(private serviceCategoria: CategoriaService,\n    private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.listarCategoria();\n  }\n\n  ValidarCampos(campo: string) {\n    return this.formularioCategoria.controls[campo].errors\n      && this.formularioCategoria.controls[campo].touched;\n  }\n\n  crearCategoria() {\n    if (this.formularioCategoria.invalid) {\n      Swal.fire('Error, Campos Vacios', 'Por favor, Llene los Campos', 'error')\n    } else {\n      const { nombre }=this.formularioCategoria.value;\n      const cat: Categoria = {\n        \"nombre\": nombre\n      };\n      this.serviceCategoria.crearCategoria(cat).subscribe(\n        data => {\n          console.log(data);\n          this.formularioCategoria.reset();\n          this.listarCategoria();\n        }\n      );\n    }\n\n  }\n\n  listarCategoria() {\n    this.serviceCategoria.listaCategoria().subscribe(\n      data => {\n        this.categoria = data;\n      }\n    );\n  }\n\n  cancelar(){\n    this.formularioCategoria.reset();\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjcmVhci1jYXRlZ29yaWEuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0YS1jYXRlZ29yaWEuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Categoria</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n                    <hr>\\n                    <div class=\\\"col-md-6\\\">\\n\\n                        <form class=\\\"example-form\\\" [formGroup]=\\\"formularioCategoria\\\" autocomplete=\\\"off\\\">\\n                            <p>\\n                                <mat-form-field class=\\\"example-full-width\\\">\\n                                    <input matInput placeholder=\\\"Modelo Producto\\\" type=\\\"text\\\" formControlName='nombre'>\\n                                </mat-form-field>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"ValidarCampos('nombre')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </p>\\n                        </form>\\n                        <br>\\n                        <br>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button class=\\\"btn btn-danger pull-right\\\" (click)=\\\"crearCategoria()\\\">\\n                                    Agregar</button>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"cancelar()\\\">\\n                                    Cancelar</button>\\n                            </div>\\n\\n                            <div class=\\\"col-md-4\\\">\\n                                <button mat-raised-button class=\\\"btn btn-info\\\" (click)=\\\"listarCategoria()\\\"\\n                                    color=\\\"primary\\\">Listar</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <br>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"\\\">\\n                            <table class=\\\"table table-hover \\\">\\n\\n                                <thead class=\\\"table-dark\\\">\\n                                    <th>\\n                                        Nombre de la Categoria\\n                                    </th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let item of categoria\\\">\\n                                        <td>\\n                                            {{item.nombre}}\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoriaRoutingModule } from './categoria-routing.module';\nimport { ListaCategoriaComponent } from './lista-categoria/lista-categoria.component';\nimport { CrearCategoriaComponent } from './crear-categoria/crear-categoria.component';\nimport { MaterialModule } from '../material/material.module';\n\n\n@NgModule({\n  declarations: [\n    ListaCategoriaComponent,\n    CrearCategoriaComponent\n  ],\n  imports: [\n    CommonModule,\n    CategoriaRoutingModule,\n    MaterialModule\n  ]\n})\nexport class CategoriaModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lista-categoria',\n  templateUrl: './lista-categoria.component.html',\n  styleUrls: ['./lista-categoria.component.css']\n})\nexport class ListaCategoriaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriaService {\n\n  constructor(private http:HttpClient) { }\n\n\n  crearCategoria(categoria:Categoria){\n    const url=environment.ip+'inventario/guardarCategoria';\n    return this.http.post<any>(url,categoria,{headers: \n      {'Content-Type': 'application/json; charset=UTF-8'}}\n      );\n  }\n\n  listaCategoria(){\n    const url=environment.ip+'inventario/listaCategoria';\n    return this.http.get<Categoria[]>(url);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListaCategoriaComponent } from './lista-categoria/lista-categoria.component';\nimport { CrearCategoriaComponent } from './crear-categoria/crear-categoria.component';\nimport { ValidarTokenGuard } from '../auth/guards/validar-token.guard';\n\nconst routes: Routes = [\n  {\n    path:'',\n    children:[\n      {\n        path: 'crear',\n        component:CrearCategoriaComponent\n      },\n      {\n        path: 'listar',\n        component:ListaCategoriaComponent\n      },\n      { path: '**', redirectTo: 'crear' },\n    ],\n    canActivate:[ValidarTokenGuard],\n    canLoad:[ValidarTokenGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriaRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad, Router } from '@angular/router';\nimport { map } from 'jquery';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidarTokenGuard implements CanActivate, CanLoad {\n\n  constructor(private auth: AuthService,\n    private router: Router) { }\n\n  canActivate(): Observable<boolean> | boolean {\n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n  canLoad(): Observable<boolean> | boolean {\n   \n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n\n\n}\n","export default \"<p>lista-categoria works!</p>\\n\";"],"sourceRoot":"webpack:///"}