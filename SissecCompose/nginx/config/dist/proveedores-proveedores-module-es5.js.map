{"version":3,"sources":["webpack:///src/app/proveedores/actualizar-proveedor/actualizar-proveedor.component.ts","webpack:///src/app/validator/Validaciones.ts","webpack:///src/app/proveedores/service/proveedor.service.ts","webpack:///src/app/proveedores/proveedor/proveedor.component.html","webpack:///src/app/proveedores/nuevo-proveedor/nuevo-proveedor.component.css","webpack:///src/app/proveedores/actualizar-proveedor/actualizar-proveedor.component.html","webpack:///src/app/proveedores/nuevo-proveedor/nuevo-proveedor.component.html","webpack:///src/app/proveedores/proveedor/proveedor.component.ts","webpack:///src/app/proveedores/actualizar-proveedor/actualizar-proveedor.component.css","webpack:///src/app/proveedores/proveedor-routing.module.ts","webpack:///src/app/proveedores/nuevo-proveedor/nuevo-proveedor.component.ts","webpack:///src/app/proveedores/filtradoProveedor/filtrado.pipe.ts","webpack:///src/app/proveedores/proveedor/proveedor.component.css","webpack:///src/app/auth/guards/validar-token.guard.ts","webpack:///src/app/proveedores/proveedores.module.ts"],"names":["ActualizarProveedorComponent","http","router","service","prov","id","cedula","nombres","apellidos","telefono","direccion","correo","undefined","fire","prove","put","ip","headers","subscribe","data","codigo","mensaje","then","result","value","navigate","selector","template","emailPattern","nombreApellidoPattern","validarPassword","ProveedorService","url","get","providedIn","ProveedorComponent","serviceProveedor","listaProveedores","search","listarProveedor","error","console","log","proveedorRecuperado","routes","path","children","component","redirectTo","canActivate","canLoad","ProveedorRoutingModule","imports","forChild","exports","NuevoProveedorComponent","fb","formularioProveedor","group","required","maxLength","verificarCedula","minLength","pattern","invalid","post","reset","campo","touched","controls","errors","control","valor","trim","tercerDigito","parseInt","substring","coefValCedula","verificador","suma","digito","i","length","Math","round","FiltradoPipe","Proveedores","listaProveedor","buscar","filteredUsuario","filter","proveedor","toLowerCase","includes","toLocaleLowerCase","name","ValidarTokenGuard","auth","ProveedoresModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAGA;;;UAaaA,4BAA4B;AAUvC,8CACUC,IADV,EAEUC,MAFV,EAGUC,OAHV,EAGqC;AAAA;;AAF3B,eAAAF,IAAA,GAAAA,IAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AAA8B;;AAbD;AAAA;AAAA,iBAevC,oBAAQ;AACN,gBAAI,KAAKA,OAAL,CAAaC,IAAb,IAAqB,IAAzB,EAA+B;AAC7B,mBAAKC,EAAL,GAAU,KAAKF,OAAL,CAAaC,IAAb,CAAkBC,EAA5B;AACA,mBAAKC,MAAL,GAAc,KAAKH,OAAL,CAAaC,IAAb,CAAkBE,MAAhC;AACA,mBAAKC,OAAL,GAAe,KAAKJ,OAAL,CAAaC,IAAb,CAAkBG,OAAjC;AACA,mBAAKC,SAAL,GAAiB,KAAKL,OAAL,CAAaC,IAAb,CAAkBI,SAAnC;AACA,mBAAKC,QAAL,GAAgB,KAAKN,OAAL,CAAaC,IAAb,CAAkBK,QAAlC;AACA,mBAAKC,SAAL,GAAiB,KAAKP,OAAL,CAAaC,IAAb,CAAkBM,SAAnC;AACA,mBAAKC,MAAL,GAAc,KAAKR,OAAL,CAAaC,IAAb,CAAkBO,MAAhC;AACD,aARD,MAQO,CAEN;AAIF;AA9BsC;AAAA;AAAA,iBAgCvC,+BAAsB;AAAA;;AACpB,gBAAI,KAAKN,EAAL,IAAWO,SAAf,EAA0B;AACxB,iEAAKC,IAAL,CAAU,OAAV,EAAmB,uBAAnB,EAA4C,OAA5C;AACD,aAFD,MAEO;AAGL,kBAAMC,KAAK,GAAc;AACvB,sBAAM,KAAKT,EADY;AAEvB,0BAAU,KAAKC,MAFQ;AAGvB,2BAAW,KAAKC,OAHO;AAIvB,6BAAa,KAAKC,SAJK;AAKvB,4BAAY,KAAKC,QALM;AAMvB,6BAAa,KAAKC,SANK;AAOvB,0BAAU,KAAKC;AAPQ,eAAzB;AAUA,mBAAKV,IAAL,CAAUc,GAAV,CAAmB,sEAAYC,EAAZ,GAAiB,6BAApC,EACEF,KADF,EAEE;AACEG,uBAAO,EAAE;AACP,kCAAgB;AADT;AADX,eAFF,EAMKC,SANL,CAOI,UAAAC,IAAI,EAAI;AAEN,oBAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AACpB,qEAAKP,IAAL,CAAU,wBAAV,EAAoCM,IAAI,CAACE,OAAzC,EAAkD,SAAlD,EACGC,IADH,CACQ,UAAAC,MAAM,EAAI;AACd,wBAAIA,MAAM,CAACC,KAAX,EAAkB;AAChB,2BAAI,CAACtB,MAAL,CAAYuB,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD;AACF,mBALH;AAOD,iBARD,MAQO;AACL,qEAAKZ,IAAL,CAAU,OAAV,EAAmBM,IAAI,CAACE,OAAxB,EAAiC,OAAjC;AACD;AAEF,eArBL;AAsBD;AACF;AAvEsC;AAAA;AAAA,iBA0EvC,6BAAiB;AACf,iBAAKnB,MAAL,CAAYuB,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD;AA5EsC;;AAAA;AAAA,S;;;;gBAfhC;;gBACA;;gBAIA;;;;AAUIzB,kCAA4B,eALxC,gEAAU;AACT0B,gBAAQ,EAAE,0BADD;AAETC,gBAAQ,EAAR,uFAFS;;AAAA,OAAV,CAKwC,E,iCAWvB,+D,EACE,sD,EACC,2E,EAboB,GAA5B3B,4BAA4B,CAA5B;;;;;;;;;;;;;;;;AChBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAM4B,YAAY,GAAoB,2CAAtC;AACA,UAAMC,qBAAqB,GAAW,wCAAtC;AACA,UAAMC,eAAe,GAAiB,0EAAtC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCMMC,gBAAgB;AAG3B,kCAAoB9B,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AADpB,eAAAG,IAAA,GAAkB,IAAlB;AACyC;;AAHd;AAAA;AAAA,iBAK3B,2BAAkB;AAChB,gBAAM4B,GAAG,GAAG,sEAAYhB,EAAZ,GAAiB,wBAA7B;AACA,mBAAO,KAAKf,IAAL,CAAUgC,GAAV,CAA2BD,GAA3B,CAAP;AACD;AAR0B;;AAAA;AAAA,S;;;;gBALpB;;;;AAKID,sBAAgB,eAH5B,iEAAW;AACVG,kBAAU,EAAE;AADF,OAAX,CAG4B,E,iCAGD,+D,EAHC,GAAhBH,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACRb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCQf;;;UASaI,kBAAkB;AAK7B,oCAAoBlC,IAApB,EAA8CmC,gBAA9C,EAAkF;AAAA;;AAA9D,eAAAnC,IAAA,GAAAA,IAAA;AAA0B,eAAAmC,gBAAA,GAAAA,gBAAA;AAH9C,eAAAC,gBAAA,GAAgC,EAAhC;AACO,eAAAC,MAAA,GAAiB,EAAjB;AAE8E;;AALxD;AAAA;AAAA,iBAO7B,oBAAQ;AACN,iBAAKC,eAAL;AACD;AAT4B;AAAA;AAAA,iBAW7B,2BAAkB;AAAA;;AAChB,iBAAKtC,IAAL,CAAUgC,GAAV,CAA2B,sEAAYjB,EAAZ,GAAiB,wBAA5C,EAAsEE,SAAtE,CAAgF,UAAAC,IAAI,EAAI;AACtF,oBAAI,CAACkB,gBAAL,GAAwBlB,IAAxB;AACD,aAFD,EAEG,UAAAqB,KAAK;AAAA,qBAAIC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,KAApB,CAAJ;AAAA,aAFR;AAID;AAhB4B;AAAA;AAAA,iBAkB7B,yBAAgBF,MAAhB,EAAgC;AAC9B,iBAAKA,MAAL,GAAcA,MAAd,CAD8B,CAE9B;AAED;AAtB4B;AAAA;AAAA,iBAwB7B,sBAAaK,mBAAb,EAA6C;AAC3C,iBAAKP,gBAAL,CAAsBhC,IAAtB,GAA6BuC,mBAA7B;AACD;AA1B4B;;AAAA;AAAA,S;;;;gBAjBtB;;gBAKA;;;;AAYIR,wBAAkB,eAN9B,gEAAU;AACTT,gBAAQ,EAAE,eADD;AAETC,gBAAQ,EAAR,4EAFS;;AAAA,OAAV,CAM8B,E,iCAKH,+D,EAAsC,2E,EALnC,GAAlBQ,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACjBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,UAAMS,MAAM,GAAW,CAEnB;AACIC,YAAI,EAAE,EADV;AAEIC,gBAAQ,EAAE,CACN;AAAED,cAAI,EAAE,aAAR;AAAuBE,mBAAS,EAAE;AAAlC,SADM,EAEN;AAAEF,cAAI,EAAE,gBAAR;AAA0BE,mBAAS,EAAE;AAArC,SAFM,EAGN;AAAEF,cAAI,EAAE,YAAR;AAAsBE,mBAAS,EAAE;AAAjC,SAHM,EAIN;AAAEF,cAAI,EAAE,IAAR;AAAcG,oBAAU,EAAE;AAA1B,SAJM,CAFd;AAQIC,mBAAW,EAAE,CAAC,kFAAD,CARjB;AASIC,eAAO,EAAE,CAAC,kFAAD;AATb,OAFmB,CAAvB;;UAoBaC,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,eAJlC,+DAAS;AACNC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBT,MAAtB,CAAD,CADH;AAENU,eAAO,EAAE,CAAC,4DAAD;AAFH,OAAT,CAIkC,GAAtBH,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCpBb;;;UAUaI,uBAAuB;AAYlC,yCAAoBtD,IAApB,EACUuD,EADV,EAEUtD,MAFV,EAE0B;AAAA;;AAFN,eAAAD,IAAA,GAAAA,IAAA;AACV,eAAAuD,EAAA,GAAAA,EAAA;AACA,eAAAtD,MAAA,GAAAA,MAAA;AAXV,eAAAuD,mBAAA,GAAiC,KAAKD,EAAL,CAAQE,KAAR,CAAc;AAC7CpD,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWqD,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,EAArB,CAAtB,EAAgD,KAAKC,eAArD,CAAL,CADqC;AAE7CtD,mBAAO,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWoD,QAAZ,EAAsB,0DAAWG,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWF,SAAX,CAAqB,EAArB,CAA/C,EAAyE,0DAAWG,OAAX,CAAmB,6EAAnB,CAAzE,CAAL,CAFoC;AAG7CvD,qBAAS,EAAE,CAAC,EAAD,EAAK,EAAL,CAHkC;AAI7CC,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWkD,QAAZ,EAAsB,0DAAWG,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWF,SAAX,CAAqB,EAArB,CAA/C,CAAL,CAJmC;AAK7ClD,qBAAS,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWiD,QAAZ,EAAsB,0DAAWG,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWF,SAAX,CAAqB,EAArB,CAA/C,CAAL,CALkC;AAM7CjD,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWgD,QAAZ,EAAsB,0DAAWI,OAAX,CAAmB,oEAAnB,CAAtB,CAAL;AANqC,WAAd,CAAjC;AAW6B;;AAdK;AAAA;AAAA,iBAiBlC,4BAAmB;AAAA;;AACjB,gBAAI,CAAC,KAAKN,mBAAL,CAAyBO,OAA9B,EAAuC;AACrC,0CAAoE,KAAKP,mBAAL,CAAyBjC,KAA7F;AAAA,kBAAQlB,MAAR,yBAAQA,MAAR;AAAA,kBAAgBC,OAAhB,yBAAgBA,OAAhB;AAAA,kBAAyBC,SAAzB,yBAAyBA,SAAzB;AAAA,kBAAoCC,QAApC,yBAAoCA,QAApC;AAAA,kBAA8CC,SAA9C,yBAA8CA,SAA9C;AAAA,kBAAyDC,MAAzD,yBAAyDA,MAAzD;AAEA,kBAAMG,KAAK,GAAc;AACvB,0BAAUR,MADa;AAEvB,2BAAWC,OAFY;AAGvB,6BAAaC,SAAS,IAAI,MAHH;AAIvB,4BAAYC,QAJW;AAKvB,6BAAaC,SALU;AAMvB,0BAAUC;AANa,eAAzB;AAUA,mBAAKV,IAAL,CAAUgE,IAAV,CAAoB,sEAAYjD,EAAZ,GAAiB,0BAArC,EAAiEF,KAAjE,EAAwE;AACtEG,uBAAO,EAAE;AACP,kCAAgB;AADT;AAD6D,eAAxE,EAIGC,SAJH,CAIa,UAAAC,IAAI,EAAI;AACnB,sBAAI,CAACsC,mBAAL,CAAyBS,KAAzB;;AACA,oBAAI/C,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AAEpB,qEAAKP,IAAL,CAAU,mBAAV,EAA+BM,IAAI,CAACE,OAApC,EAA6C,SAA7C,EACEC,IADF,CACO,UAAAC,MAAM,EAAI;AACb,wBAAIA,MAAM,CAACC,KAAX,EAAkB;AAChB,4BAAI,CAACtB,MAAL,CAAYuB,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD;AACF,mBALH;AAMD,iBARD,MAQO;AACL,qEAAKZ,IAAL,CAAU,sBAAV,EAAkCM,IAAI,CAACE,OAAvC,EAAgD,SAAhD;AACD;AACF,eAjBD;AAmBD,aAhCD,MAgCO;AACL,iEAAKR,IAAL,CAAU,sBAAV,EAAkC,6BAAlC,EAAiE,OAAjE;AACD;AACF;AArDiC;AAAA;AAAA,iBA2DlC,oBAAW;AAET;AACA,iBAAKX,MAAL,CAAYuB,QAAZ,CAAqB,CAAC,wBAAD,CAArB;AACD,WA/DiC,CAiElC;AACA;AACA;;AAnEkC;AAAA;AAAA,iBAsElC,uBAAc0C,KAAd,EAA6B;;;AAC3B,mBAAO,YAAKV,mBAAL,CAAyBxB,GAAzB,CAA6BkC,KAA7B,OAAmC,IAAnC,IAAmC,aAAnC,GAAmC,MAAnC,GAAmC,GAAEH,OAArC,MAA4C,MAC9C,KAAKP,mBAAL,CAAyBxB,GAAzB,CAA6BkC,KAA7B,CAD8C,MACX,IADW,IACX,aADW,GACX,MADW,GACX,GAAEC,OADnC,CAAP;AAED;AAzEiC;AAAA;AAAA,iBA2ElC,uBAAcD,KAAd,EAA6B;AAC3B,mBAAO,KAAKV,mBAAL,CAAyBY,QAAzB,CAAkCF,KAAlC,EAAyCG,MAAzC,IACF,KAAKb,mBAAL,CAAyBY,QAAzB,CAAkCF,KAAlC,EAAyCC,OAD9C;AAED;AA9EiC;AAAA;AAAA,iBAgFlC,yBAAgBG,OAAhB,EAAsC;;;AACpC,gBAAMC,KAAK,SAAWD,OAAO,CAAC/C,KAAnB,MAAwB,IAAxB,IAAwB,aAAxB,GAAwB,MAAxB,GAAwB,GAAEiD,IAAF,EAAnC;;AACA,gBAAID,KAAJ,EAAW;AACT,kBAAIE,YAAY,GAAGC,QAAQ,CAACH,KAAK,CAACI,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAA3B;;AACA,kBAAIF,YAAY,GAAG,CAAnB,EAAsB;AACpB;AACA,oBAAIG,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,CAApB;AACA,oBAAIC,WAAW,GAAGH,QAAQ,CAACH,KAAK,CAACI,SAAN,CAAgB,CAAhB,EAAmB,EAAnB,CAAD,CAA1B;AACA,oBAAIG,IAAI,GAAW,CAAnB;AACA,oBAAIC,MAAM,GAAW,CAArB;;AACA,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIT,KAAK,CAACU,MAAN,GAAe,CAApC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3CD,wBAAM,GAAGL,QAAQ,CAACH,KAAK,CAACI,SAAN,CAAgBK,CAAhB,EAAmBA,CAAC,GAAG,CAAvB,CAAD,CAAR,GAAsCJ,aAAa,CAACI,CAAD,CAA5D;AACAF,sBAAI,IAAMJ,QAAQ,CAAEK,MAAM,GAAG,EAAV,GAAgB,EAAjB,CAAR,GAAgCL,QAAQ,CAAEK,MAAM,GAAG,EAAV,GAAgB,EAAjB,CAAlD;AACD;;AACDD,oBAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAP;;AACA,oBAAKI,IAAI,CAACC,KAAL,CAAWL,IAAI,GAAG,EAAlB,KAAyB,CAA1B,IAAiCI,IAAI,CAACC,KAAL,CAAWL,IAAI,GAAG,EAAlB,KAAyBD,WAA9D,EAA4E;AAC1E,yBAAO,IAAP;AAED,iBAHD,MAGO,IAAK,KAAMK,IAAI,CAACC,KAAL,CAAWL,IAAI,GAAG,EAAlB,CAAP,IAAkCD,WAAtC,EAAmD;AACxD,yBAAO,IAAP;AACD,iBAFM,MAEA;AACL,yBAAO;AACLxE,0BAAM,EAAE;AADH,mBAAP;AAGD;AACF,eArBD,MAqBO;AACL,uBAAO;AACLA,wBAAM,EAAE;AADH,iBAAP;AAGD;AACF,aA5BD,MA4BO;AACL,qBAAO;AACLA,sBAAM,EAAE;AADH,eAAP;AAGD;AACF;AAnHiC;;AAAA;AAAA,S;;;;gBAlB3B;;gBASA;;gBANA;;;;AAeIiD,6BAAuB,eALnC,gEAAU;AACT7B,gBAAQ,EAAE,qBADD;AAETC,gBAAQ,EAAR,kFAFS;;AAAA,OAAV,CAKmC,E,iCAYR,+D,EACZ,0D,EACI,sD,EAdgB,GAAvB4B,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCZA8B,YAAY;;;;AAEvB,eAAAC,WAAA,GAA2B,EAA3B;AAoBD;;AAtBwB;AAAA;AAAA,iBAIvB,mBAAUC,cAAV,EAAuCC,MAAvC,EAAqD;AACnD,gBAAIA,MAAM,CAACN,MAAP,KAAkB,CAAtB,EAAyB;AACvB,qBAAOK,cAAP;AACD;;AAGD,gBAAME,eAAe,GAAGF,cAAc,CAACG,MAAf,CAAsB,UAAAC,SAAS;AAAA,qBAAIA,SAAS,CAACrF,MAAV,CAAiBmE,IAAjB,GAAwBmB,WAAxB,GAAsCC,QAAtC,CAA+CL,MAAM,CAACf,IAAP,GAAcqB,iBAAd,EAA/C,CAAJ;AAAA,aAA/B,CAAxB;AACA,mBAAOL,eAAP,CAPmD,CAQnD;AAEA;AACA;AACA;AAEA;AAEA;AACD;AArBsB;;AAAA;AAAA,S;;AAAZJ,kBAAY,eAHxB,2DAAK;AACJU,YAAI,EAAE;AADF,OAAL,CAGwB,GAAZV,YAAY,CAAZ;;;;;;;;;;;;;;;;ACNb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUFW,iBAAiB;AAE5B,mCAAoBC,IAApB,EACU/F,MADV,EAC0B;AAAA;;AADN,eAAA+F,IAAA,GAAAA,IAAA;AACV,eAAA/F,MAAA,GAAAA,MAAA;AAAmB;;AAHD;AAAA;AAAA,iBAK5B,uBAAW;AACT,mBAAO,IAAP,CADS,CAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAf2B;AAAA;AAAA,iBAgB5B,mBAAO;AAEL,mBAAO,IAAP,CAFK,CAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA3B2B;;AAAA;AAAA,S;;;;gBALrB;;gBAJsB;;;;AASlB8F,uBAAiB,eAH7B,iEAAW;AACV9D,kBAAU,EAAE;AADF,OAAX,CAG6B,E,iCAEF,iE,EACR,sD,EAHU,GAAjB8D,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCaAE,iBAAiB;AAAA;AAAA,O;;AAAjBA,uBAAiB,eAV7B,+DAAS;AACRC,oBAAY,EAAE,CAAC,kGAAD,EAAyB,iFAAzB,EAA4C,6EAA5C,EAA0D,iHAA1D,CADN;AAER/C,eAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,gEAHO,EAIP,4DAJO,EAKP,gFALO;AAFD,OAAT,CAU6B,GAAjB8C,iBAAiB,CAAjB","file":"proveedores-proveedores-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n//import { environment } from 'environments/conexion';\nimport Swal from 'sweetalert2';\n\nimport { ProveedorService } from '../service/proveedor.service';\nimport { Proveedor } from '../model/proveedor-interface';\nimport { environment } from '../../../environments/environment';\n\n\n@Component({\n  selector: 'app-actualizar-proveedor',\n  templateUrl: './actualizar-proveedor.component.html',\n  styleUrls: ['./actualizar-proveedor.component.css']\n})\nexport class ActualizarProveedorComponent implements OnInit {\n\n  id: number;\n  cedula: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  direccion: string;\n  correo: string;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private service: ProveedorService) { }\n\n  ngOnInit(): void {\n    if (this.service.prov != null) {\n      this.id = this.service.prov.id;\n      this.cedula = this.service.prov.cedula;\n      this.nombres = this.service.prov.nombres;\n      this.apellidos = this.service.prov.apellidos;\n      this.telefono = this.service.prov.telefono;\n      this.direccion = this.service.prov.direccion;\n      this.correo = this.service.prov.correo;\n    } else {\n      \n    }\n\n\n\n  }\n\n  actualizarProveedor() {\n    if (this.id == undefined) {\n      Swal.fire('Error', 'No se pudo Actualizar', 'error');\n    } else {\n\n\n      const prove: Proveedor = {\n        \"id\": this.id,\n        \"cedula\": this.cedula,\n        \"nombres\": this.nombres,\n        \"apellidos\": this.apellidos,\n        \"telefono\": this.telefono,\n        \"direccion\": this.direccion,\n        \"correo\": this.correo\n      };\n\n      this.http.put<any>(environment.ip + 'usuario/actualizarProveedor',\n        prove,\n        {\n          headers: {\n            'Content-Type': 'application/json; charset=UTF-8'\n          }\n        }).subscribe(\n          data => {\n            \n            if (data.codigo == 1) {\n              Swal.fire('Actualizacion Completa', data.mensaje, 'success')\n                .then(result => {\n                  if (result.value) {\n                    this.router.navigate(['/proveedor/proveedores']);\n                  }\n                });\n\n            } else {\n              Swal.fire('Error', data.mensaje, 'error');\n            }\n\n          });\n    }\n  }\n\n\n  cancelarProveedor(){\n    this.router.navigate(['/proveedor/proveedores']);\n  }\n\n}\n","export const emailPattern         : string = \"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\";\r\nexport const nombreApellidoPattern: string = \"([a-zA-Z',.-]+( [a-zA-Z',.-]+)*){2,30}\";\r\nexport const validarPassword      : string = '(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}';","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { Proveedor } from '../model/proveedor-interface';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProveedorService {\n\n  prov: Proveedor = null;\n  constructor(private http: HttpClient) { }\n\n  listarProveedor() {\n    const url = environment.ip + 'usuario/listaProveedor';\n    return this.http.get<Proveedor[]>(url);\n  }\n\n}\n","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title \\\">Tabla Proveedores</h4>\\n                        <p class=\\\"card-category\\\"> Aqui tiene disponible la informacion de los proveedores </p>\\n\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                        <h1 class=\\\"h1\\\"></h1>\\n\\n                        <div>\\n\\n                            <a class=\\\"btn btn-success\\\" routerLink=\\\"/proveedor/nuevoProveedor\\\" style=\\\"margin-right:10px\\\">\\n                                Añadir\\n                                Nuevo</a>\\n                            <br>\\n                            <br>\\n\\n                            <input type=\\\"text\\\" class=\\\"form-control mb-2\\\" placeholder=\\\"Buscar por cedula\\\" #txtSearch\\n                                (keyup)=\\\"filtroProveedor(txtSearch.value)\\\" />\\n\\n                        </div>\\n\\n                        <div class=\\\"table-responsive\\\">\\n                            <table class=\\\"table\\\">\\n                                <thead class=\\\" text-primary\\\">\\n                                    <th>\\n                                        ID/RUC\\n                                    </th>\\n                                    <th>\\n                                        Nombre\\n                                    </th>\\n                                    <th>\\n                                        Apellido\\n                                    </th>\\n                                    <th>\\n                                        Direccion\\n                                    </th>\\n                                    <th>\\n                                        Telefono\\n                                    </th>\\n\\n\\n                                    <th>\\n                                        Email\\n                                    </th>\\n                                    <th>\\n                                        Acciones\\n                                    </th>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let proveedor of listaProveedores |filtrado:search\\\">\\n                                        <td>\\n                                            {{proveedor.cedula}}\\n                                        </td>\\n                                        <td>\\n                                            {{proveedor.nombres}}\\n                                        </td>\\n                                        <td>\\n                                            {{proveedor.apellidos}}\\n                                        </td>\\n                                        <td>\\n                                            {{proveedor.direccion}}\\n                                        </td>\\n                                        <td class=\\\"text-primary\\\">\\n                                            {{proveedor.telefono}}\\n                                        </td>\\n\\n                                        <td>\\n                                            {{proveedor.correo}}\\n                                        </td>\\n                                        <td>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"getProveedor(proveedor)\\\"\\n                                                routerLink=\\\"/proveedor/actualizar\\\">Actualizar</button>\\n                                        </td>\\n                                        <td>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\">Eliminar</button>\\n\\n\\n                                        </td>\\n\\n                                    </tr>\\n\\n\\n\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJudWV2by1wcm92ZWVkb3IuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Actualizar Proveedor</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cedula\\\" placeholder=\\\"CI/RUC\\\"\\n                                    required>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"nombres\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre\\\"\\n                                    required>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"apellidos\\\" placeholder=\\\"Apellido\\\"\\n                                    required>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"direccion\\\" placeholder=\\\"Direccion\\\"\\n                                    required>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"tel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"telefono\\\" id=\\\"telefono\\\"\\n                                    name=\\\"telefono\\\" placeholder=\\\"Telefono\\\">\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"correo\\\" id=\\\"email\\\" name=\\\"email\\\"\\n                                    placeholder=\\\"Email\\\" required>\\n                            </div>\\n                        </div>\\n\\n                        <br>\\n                        <div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-3\\\">\\n                                    <a class=\\\"btn btn-success\\\" (click)=\\\"actualizarProveedor()\\\" style=\\\"margin-right:10px\\\"> Guardar</a>\\n                                </div>\\n                                <div class=\\\"col-md-3\\\">\\n                                    <a class=\\\"btn btn-success\\\"  class=\\\"btn btn-danger pull-right\\\"\\n                                  (click)=\\\"cancelarProveedor()\\\" style=\\\"margin-right:10px\\\"> Cancelar</a>\\n                                </div>\\n                            </div>\\n                           \\n                        </div>\\n\\n\\n\\n                    </div>\\n                </div>\\n                \\n            </div>\\n\\n        </div>\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-danger\\\">\\n                        <h4 class=\\\"card-title\\\">Perfil Proveedor</h4>\\n                        <p class=\\\"card-category\\\">Complete la informacion a continuacion</p>\\n                    </div>\\n\\n                    <div class=\\\"card-body\\\">\\n                        <form [formGroup]=\\\"formularioProveedor\\\" autocomplete=\\\"off\\\">\\n\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" maxlength=\\\"13\\\" minlength=\\\"10\\\"\\n                                        placeholder=\\\"CI/RUC\\\" formControlName=\\\"cedula\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"validarCedula('cedula')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre\\\"\\n                                        formControlName=\\\"nombres\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('nombres')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Apellido\\\"\\n                                        formControlName=\\\"apellidos\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('apellidos')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Direccion\\\"\\n                                        formControlName=\\\"direccion\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('direccion')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Telefono\\\"\\n                                        formControlName=\\\"telefono\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('telefono')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n                            <div class=\\\"form-group\\\">\\n\\n                                <div class=\\\"col-sm-10\\\">\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\"\\n                                        formControlName=\\\"correo\\\">\\n                                </div>\\n                                <span class=\\\"form-text text-danger\\\" *ngIf=\\\"campoNoValido('correo')\\\">\\n                                    Este campo es obligatorio\\n                                </span>\\n                            </div>\\n\\n\\n                        </form>\\n\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-4\\\">\\n                        <a class=\\\"btn btn-success\\\" (click)=\\\"guardarProveedor()\\\"> Guardar</a>\\n                    </div>\\n                    <div class=\\\"col-md-4\\\">\\n                        <button mat-raised-button (click)=\\\"cancelar()\\\" class=\\\"btn btn-primary pull-right\\\">\\n                            Cancelar</button>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n        </div>\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n//import { environment } from 'environments/conexion';\nimport { Proveedor } from '../model/proveedor-interface';\n\nimport { ProveedorService } from '../service/proveedor.service';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n//import { environment } from '../../../environments/conexion';\n\n\n@Component({\n  selector: 'app-proveedor',\n  templateUrl: './proveedor.component.html',\n  styleUrls: ['./proveedor.component.css']\n\n})\nexport class ProveedorComponent implements OnInit {\n\n  listaProveedores: Proveedor[] = [];\n  public search: string = '';\n\n  constructor(private http: HttpClient, private serviceProveedor: ProveedorService) { }\n\n  ngOnInit(): void {\n    this.listarProveedor();\n  }\n\n  listarProveedor() {\n    this.http.get<Proveedor[]>(environment.ip + 'usuario/listaProveedor').subscribe(data => {\n      this.listaProveedores = data;\n    }, error => console.log('oops', error)\n    );\n  }\n\n  filtroProveedor(search: string) {\n    this.search = search;\n    //console.log(search);\n    \n  }\n\n  getProveedor(proveedorRecuperado: Proveedor) {\n    this.serviceProveedor.prov = proveedorRecuperado;\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY3R1YWxpemFyLXByb3ZlZWRvci5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NuevoProveedorComponent } from './nuevo-proveedor/nuevo-proveedor.component';\r\nimport { ProveedorComponent } from './proveedor/proveedor.component';\r\nimport { ActualizarProveedorComponent } from './actualizar-proveedor/actualizar-proveedor.component';\r\nimport { ValidarTokenGuard } from '../auth/guards/validar-token.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n    {\r\n        path: '',\r\n        children: [\r\n            { path: 'proveedores', component: ProveedorComponent },\r\n            { path: 'nuevoProveedor', component: NuevoProveedorComponent },\r\n            { path: 'actualizar', component: ActualizarProveedorComponent },\r\n            { path: '**', redirectTo: 'proveedores' },\r\n        ],\r\n        canActivate: [ValidarTokenGuard],\r\n        canLoad: [ValidarTokenGuard]\r\n    },\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProveedorRoutingModule { }","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { Router } from '@angular/router';\n//import { ServidorConexion } from 'environments/conexion';\nimport { Proveedor } from '../model/proveedor-interface';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../environments/environment';\n//import { ServidorConexion } from '../../../environments/conexion';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { emailPattern, nombreApellidoPattern } from '../../validator/Validaciones';\n\n\n@Component({\n  selector: 'app-nuevo-proveedor',\n  templateUrl: './nuevo-proveedor.component.html',\n  styleUrls: ['./nuevo-proveedor.component.css']\n})\nexport class NuevoProveedorComponent {\n\n\n  formularioProveedor: FormGroup = this.fb.group({\n    cedula: ['', [Validators.required, Validators.maxLength(10), this.verificarCedula]],\n    nombres: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(20), Validators.pattern(nombreApellidoPattern)]],\n    apellidos: ['', []],\n    telefono: ['', [Validators.required, Validators.minLength(9), Validators.maxLength(15)]],\n    direccion: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],\n    correo: ['', [Validators.required, Validators.pattern(emailPattern)]],\n  });\n\n  constructor(private http: HttpClient,\n    private fb: FormBuilder,\n    private router: Router) { }\n\n\n  guardarProveedor() {\n    if (!this.formularioProveedor.invalid) {\n      const { cedula, nombres, apellidos, telefono, direccion, correo } = this.formularioProveedor.value;\n\n      const prove: Proveedor = {\n        \"cedula\": cedula,\n        \"nombres\": nombres,\n        \"apellidos\": apellidos || 'none',\n        \"telefono\": telefono,\n        \"direccion\": direccion,\n        \"correo\": correo\n      };\n\n\n      this.http.post<any>(environment.ip + 'usuario/guardarProveedor', prove, {\n        headers: {\n          'Content-Type': 'application/json; charset=UTF-8'\n        }\n      }).subscribe(data => {\n        this.formularioProveedor.reset();\n        if (data.codigo == 1) {\n\n          Swal.fire('Creacion Correcta', data.mensaje, 'success').\n            then(result => {\n              if (result.value) {\n                this.router.navigate(['/proveedor/proveedores']);\n              }\n            });\n        } else {\n          Swal.fire('Error en la Creacion', data.mensaje, 'warning')\n        }\n      });\n\n    } else {\n      Swal.fire('Error, Campos Vacios', 'Por favor, Llene los Campos', 'error')\n    }\n  }\n\n\n\n\n\n  cancelar() {\n\n    //  this.formularioProveedor.reset();\n    this.router.navigate(['/proveedor/proveedores']);\n  }\n\n  // limpiarProveedor() {\n  //   this.formularioProveedor.reset();\n  // }\n\n\n  campoNoValido(campo: string) {\n    return this.formularioProveedor.get(campo)?.invalid\n      && this.formularioProveedor.get(campo)?.touched;\n  }\n\n  validarCedula(campo: string) {\n    return this.formularioProveedor.controls[campo].errors\n      && this.formularioProveedor.controls[campo].touched;\n  }\n\n  verificarCedula(control: FormControl) {\n    const valor: string = control.value?.trim();\n    if (valor) {\n      let tercerDigito = parseInt(valor.substring(2, 3));\n      if (tercerDigito < 6) {\n        // El ultimo digito se lo considera dígito verificador\n        let coefValCedula = [2, 1, 2, 1, 2, 1, 2, 1, 2];\n        let verificador = parseInt(valor.substring(9, 10));\n        let suma: number = 0;\n        let digito: number = 0;\n        for (let i = 0; i < (valor.length - 1); i++) {\n          digito = parseInt(valor.substring(i, i + 1)) * coefValCedula[i];\n          suma += ((parseInt((digito % 10) + '') + (parseInt((digito / 10) + ''))));\n        }\n        suma = Math.round(suma);\n        if ((Math.round(suma % 10) == 0) && (Math.round(suma % 10) == verificador)) {\n          return null;\n\n        } else if ((10 - (Math.round(suma % 10))) == verificador) {\n          return null;\n        } else {\n          return {\n            cedula: false\n          }\n        }\n      } else {\n        return {\n          cedula: false\n        }\n      }\n    } else {\n      return {\n        cedula: false\n      }\n    }\n  }\n\n\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Proveedor } from '../model/proveedor-interface';\n\n@Pipe({\n  name: 'filtrado'\n})\nexport class FiltradoPipe implements PipeTransform {\n\n  Proveedores: Proveedor[] = [];\n\n  transform(listaProveedor: Proveedor[], buscar: string): Proveedor[] {\n    if (buscar.length === 0) {\n      return listaProveedor;\n    }\n\n\n    const filteredUsuario = listaProveedor.filter(proveedor => proveedor.cedula.trim().toLowerCase().includes(buscar.trim().toLocaleLowerCase()));\n    return filteredUsuario;\n    // for (const prov of lista1) {\n\n    //   if (prov.cedula == search) {\n    //     this.Proveedores.push(prov);\n    //   }\n\n    // }\n\n    // return this.Proveedores;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm92ZWVkb3IuY29tcG9uZW50LmNzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { CanActivate, CanLoad, Router } from '@angular/router';\nimport { map } from 'jquery';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidarTokenGuard implements CanActivate, CanLoad {\n\n  constructor(private auth: AuthService,\n    private router: Router) { }\n\n  canActivate(): Observable<boolean> | boolean {\n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n  canLoad(): Observable<boolean> | boolean {\n   \n    return true;\n    // return this.auth.validarToken()\n    //   .pipe(\n    //     tap(valido => {\n    //       if (!valido) {\n    //         this.router.navigateByUrl('/auth/login');\n    //       }\n    //     })\n    //   );\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NuevoProveedorComponent } from './nuevo-proveedor/nuevo-proveedor.component';\nimport { ProveedorComponent } from './proveedor/proveedor.component';\nimport { FiltradoPipe } from './filtradoProveedor/filtrado.pipe';\nimport { MaterialModule } from '../material/material.module';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { RouterModule } from '@angular/router';\nimport { ProveedorRoutingModule } from './proveedor-routing.module';\nimport { ActualizarProveedorComponent } from './actualizar-proveedor/actualizar-proveedor.component';\n\n\n\n@NgModule({\n  declarations: [NuevoProveedorComponent,ProveedorComponent,FiltradoPipe, ActualizarProveedorComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    LayoutModule,\n    RouterModule,\n    ProveedorRoutingModule\n  ]\n})\nexport class ProveedoresModule { }\n"]}